[{"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/_app.tsx":"1","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/api/hello.ts":"2","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/clients/[client_id].tsx":"3","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/helpers/getFillerStyle.tsx":"4","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/login/LoginForm.tsx":"5","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/Breadcrumbs.tsx":"6","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/Logo.tsx":"7","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/Navigation.tsx":"8","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/NavigationButtons.tsx":"9","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/NavigationLinks.tsx":"10","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/Header.tsx":"11","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/MachinesTable.tsx":"12","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/Popup.tsx":"13","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/Statistics.tsx":"14","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/StorageSystem.tsx":"15","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/StorageSystemDashboard.tsx":"16","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/Summary.tsx":"17","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/impressum.tsx":"18","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/index.tsx":"19","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/machines/[id].tsx":"20","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/edit-machine/[id].tsx":"21","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/new-machine.tsx":"22","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/shift-calendar.tsx":"23","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/shift-manager.tsx":"24","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting/annual-evaluation.tsx":"25","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting/annual-revenues.tsx":"26","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting/co2-evaluation.tsx":"27","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting/control-documents.tsx":"28","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting.tsx":"29","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/storage-systems.tsx":"30","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/edit-worker/[user].tsx":"31","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/new-worker.tsx":"32","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/[client].tsx":"33","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/edit-client/[client].tsx":"34","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/helpers/pdf.tsx":"35","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/helpers/fromHex.tsx":"36","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/helpers/toHex.tsx":"37","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/edit-indexgroup/[indexgroup_name].tsx":"38","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/edit-sort/[indexgroup_name].tsx":"39","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/edit-sort/sort/[sort_name].tsx":"40","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/index-management.tsx":"41","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/new-indexgroup.tsx":"42","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/new-sort/[indexgroup_name].tsx":"43","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/price-matrix/[sort_name].tsx":"44","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation.tsx":"45","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/indeces/[sort_name].tsx":"46","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/indeces/edit-index/[index_name].tsx":"47","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/indeces/new-index/[sort_name].tsx":"48","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/price-list/[id].tsx":"49"},{"size":1876,"mtime":1685024518862,"results":"50","hashOfConfig":"51"},{"size":307,"mtime":1679046485943,"results":"52","hashOfConfig":"51"},{"size":4364,"mtime":1679314143177,"results":"53","hashOfConfig":"51"},{"size":722,"mtime":1684745373636,"results":"54","hashOfConfig":"51"},{"size":4263,"mtime":1685024546189,"results":"55","hashOfConfig":"51"},{"size":4366,"mtime":1685023545569,"results":"56","hashOfConfig":"51"},{"size":286,"mtime":1679046485944,"results":"57","hashOfConfig":"51"},{"size":595,"mtime":1685023574802,"results":"58","hashOfConfig":"51"},{"size":756,"mtime":1685024326473,"results":"59","hashOfConfig":"51"},{"size":1554,"mtime":1683809919719,"results":"60","hashOfConfig":"51"},{"size":486,"mtime":1685023607589,"results":"61","hashOfConfig":"51"},{"size":3251,"mtime":1679046485944,"results":"62","hashOfConfig":"51"},{"size":7774,"mtime":1679046485944,"results":"63","hashOfConfig":"51"},{"size":1288,"mtime":1679046485945,"results":"64","hashOfConfig":"51"},{"size":1727,"mtime":1679046485945,"results":"65","hashOfConfig":"51"},{"size":26231,"mtime":1685365386529,"results":"66","hashOfConfig":"51"},{"size":611,"mtime":1679046485945,"results":"67","hashOfConfig":"51"},{"size":2198,"mtime":1680689450648,"results":"68","hashOfConfig":"51"},{"size":371,"mtime":1679046485945,"results":"69","hashOfConfig":"51"},{"size":17036,"mtime":1685022142253,"results":"70","hashOfConfig":"51"},{"size":21373,"mtime":1683546900497,"results":"71","hashOfConfig":"51"},{"size":17583,"mtime":1685348090296,"results":"72","hashOfConfig":"51"},{"size":95784,"mtime":1679046485946,"results":"73","hashOfConfig":"51"},{"size":45819,"mtime":1684763771726,"results":"74","hashOfConfig":"51"},{"size":12700,"mtime":1679046485947,"results":"75","hashOfConfig":"51"},{"size":6765,"mtime":1679046485947,"results":"76","hashOfConfig":"51"},{"size":2547,"mtime":1679046485947,"results":"77","hashOfConfig":"51"},{"size":5792,"mtime":1685345757471,"results":"78","hashOfConfig":"51"},{"size":2005,"mtime":1683809811367,"results":"79","hashOfConfig":"51"},{"size":7042,"mtime":1685346677777,"results":"80","hashOfConfig":"51"},{"size":17103,"mtime":1683810156491,"results":"81","hashOfConfig":"51"},{"size":12449,"mtime":1681729644126,"results":"82","hashOfConfig":"51"},{"size":40117,"mtime":1685358529683,"results":"83","hashOfConfig":"51"},{"size":12755,"mtime":1684748089728,"results":"84","hashOfConfig":"51"},{"size":8947,"mtime":1682618990712,"results":"85","hashOfConfig":"51"},{"size":142,"mtime":1683109076897,"results":"86","hashOfConfig":"51"},{"size":212,"mtime":1683109076900,"results":"87","hashOfConfig":"51"},{"size":2027,"mtime":1683109110098,"results":"88","hashOfConfig":"51"},{"size":7686,"mtime":1683553220022,"results":"89","hashOfConfig":"51"},{"size":4196,"mtime":1683284479469,"results":"90","hashOfConfig":"51"},{"size":3340,"mtime":1683034425136,"results":"91","hashOfConfig":"51"},{"size":1778,"mtime":1683031651846,"results":"92","hashOfConfig":"51"},{"size":2928,"mtime":1683196952943,"results":"93","hashOfConfig":"51"},{"size":9081,"mtime":1683558557558,"results":"94","hashOfConfig":"51"},{"size":750,"mtime":1683028551840,"results":"95","hashOfConfig":"51"},{"size":5851,"mtime":1683552601039,"results":"96","hashOfConfig":"51"},{"size":3007,"mtime":1683558657478,"results":"97","hashOfConfig":"51"},{"size":4129,"mtime":1683558204356,"results":"98","hashOfConfig":"51"},{"size":4231,"mtime":1685358078073,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dejlfv",{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/_app.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/api/hello.ts",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/clients/[client_id].tsx",["262"],[],"import {useEffect, useState} from \"react\";\nimport API from \"axios\";\nimport {useRouter} from \"next/router\";\n\nconst ClientPage = () => {\n    const [data, setData] = useState<any>([]);\n    const [land, setLand] = useState<any>([]);\n    const router = useRouter()\n    const pid = router.query\n\n    useEffect(() => {\n        let apiName = 'https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/clients';\n\n        API.get(apiName)\n            .then((response) => {\n                setData(response.data.Items\n                    .filter((client: { client_number: number; }) =>\n                        client.client_number == parseInt(pid.client_id as string))[0]\n                )\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n        API.get('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/lands')\n            .then((response) => {\n                setLand(response.data.Items\n                    .filter((land: { land_id: number; }) =>\n                        land.land_id == data.land_id)[0].land_name)\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n    },[]);\n\n    if (data) {\n        return(\n            <div id=\"content-page\" className=\"mx-10 p-10 overflow-auto h-full\">\n                <p className=\"mb-9 text-3xl font-bold\">Stammdaten</p>\n                <div className=\"mb-9 text-sm\">\n                    <table>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">KundenNr.:</td>\n                            <td className=\"p-0 pb-1.5 \">{data.client_number}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Firma:</td>\n                            <td className=\"p-0 pb-1.5 \">{data.client_name}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">PLZ:</td>\n                            <td className=\"p-0 pb-1.5\">{data.zip_code}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Stadt:</td>\n                            <td className=\"p-0 pb-1.5\">{data.city}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Straße:</td>\n                            <td className=\"p-0 pb-1.5\">{data.street}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0 pr-10\">Bundesland (D):</td>\n                            <td className=\"p-0 pb-1.5\">{land}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Telefon:</td>\n                            <td className=\"p-0 pb-1.5\">{data.telefon}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">E-Mail:</td>\n                            <td className=\"p-0 pb-1.5\">{data.email}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Ansprechpartner:</td>\n                            <td className=\"p-0 pb-1.5\">{data.contact}</td>\n                        </tr>\n                    </table>\n                </div>\n                <span className=\"text-xs uppercase font-bold text-gray-500\">\n                  Lagersysteme\n                </span>\n                <div className=\"sm:rounded-lg shadow-md border h-72 overflow-auto\">\n                    <table className=\"flex-row w-full table-auto\">\n                        <thead>\n                        <tr className=\"text-xs text-gray-500 border-b text-left\">\n                            <th className=\"font-normal\">Masch.-ID<br/>Max Netto</th>\n                            <th className=\"font-normal\">Material</th>\n                            <th className=\"font-normal\">Füllgrad</th>\n                            <th className=\"font-normal\">Netto (kg)</th>\n                        </tr>\n                        </thead>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ClientPage","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/helpers/getFillerStyle.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/login/LoginForm.tsx",["263","264"],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/Breadcrumbs.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/Logo.tsx",["265"],[],"import Link from \"next/link\";\nconst Logo = () => {\n    return (\n        <div id=\"logo\" className=\"mx-5 my-auto\" >\n            <Link href=\"/\">\n                <a><img className=\"ml-5 h-10\" src=\"/logo-1.png\" alt=\"logo\"/></a>\n            </Link>\n        </div>\n    )\n}\n\nexport default Logo","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/Navigation.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/NavigationButtons.tsx",["266","267"],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/navigation/NavigationLinks.tsx",["268","269"],[],"import { useRouter } from 'next/router'\n\nimport Link from \"next/link\";\n\nconst navigationLinks = [\n    {\n        name: \"Start\",\n        link: \"/\",\n        image: \"/home-svgrepo-com.svg\"\n    },\n    {\n        name: \"Stammdaten\",\n        link: \"/master-data/0\",\n        image: \"\"\n    },\n    //{\n    //    name: \"Lagersysteme\",\n    //    link: \"/storage-systems\",\n    //    image: \"\"\n    //},\n    {\n        name: \"Reporting\",\n        link: \"/reporting\",\n        image: \"\"\n    },\n    {\n        name: \"Kalkulation\",\n        link: \"/kalkulation\",\n        image: \"\"\n    },\n    {\n        name: \"Impressum\",\n        link: \"/impressum\",\n        image: \"\"\n    }\n]\n\nconst NavigationLinks = () => {\n    const router = useRouter()\n        return (\n            <div id=\"links\" className=\"ml-10 text-xs flex\">\n                {navigationLinks.map((link) =>\n                    <div className=\"flex m-auto\" key={link.name} id={link.name}>\n                        <Link key={link.name} href={link.link}>\n                            <a className=\"\">\n                                <div className=\"flex px-3 py-1\">\n                                    <img className=\"mr-1.5 mb-1.5 h-4\" src={link.image}/>\n                                    <span className=\"m-auto\">\n                                        {link.name}\n                                    </span>\n                                </div>\n                            </a>\n                        </Link>\n                    </div>\n                )}\n            </div>\n        )\n}\n\nexport default NavigationLinks","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/Header.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/MachinesTable.tsx",["270","271"],[],"import getFillerStyle from \"../helpers/getFillerStyle\";\nimport Link from \"next/link\";\n\nconst machineList = [\n    {\n        type: \"esb\",\n        id: \"4712\",\n        max_netto: 26500,\n        material: \"Eisenspäne, gebrochen ESB, gebrochen\",\n        load: 79,\n        plan_date: \"17.10.2022 02:31\",\n        pickup_date: \"1/1/2022 01:00\",\n        netto: 5880\n    },\n    {\n        type: \"bw\",\n        id: \"9001 CMS-A\",\n        max_netto: 9000,\n        material: \"Eisenspäne, normal\",\n        load: 31,\n        plan_date: \"21/12/2022 02:26\",\n        pickup_date: \"4/4/2022 01:00\",\n        netto: 2760\n    },\n    {\n        type: \"bw\",\n        id: \"9002 CMS-A\",\n        max_netto: 9000,\n        material: \"Eisenspäne, normal\",\n        load: 22,\n        plan_date: \"noch keine Füllung\",\n        pickup_date: \"-\",\n        netto: 1960\n    },\n    {\n        type: \"esb\",\n        id: \"4711\",\n        max_netto: 26500,\n        material: \"Eisenspäne, gebrochen ESB, gebrochen\",\n        load: 0,\n        plan_date: \"nicht ermittelbar\",\n        pickup_date: \"-\",\n        netto: 120\n    },\n    {\n        type: \"esb\",\n        id: \"4711\",\n        max_netto: 26500,\n        material: \"Eisenspäne, gebrochen ESB, gebrochen\",\n        load: 0,\n        plan_date: \"nicht ermittelbar\",\n        pickup_date: \"-\",\n        netto: 120\n    },\n    {\n        type: \"esb\",\n        id: \"4711\",\n        max_netto: 26500,\n        material: \"Eisenspäne, gebrochen ESB, gebrochen\",\n        load: 0,\n        plan_date: \"nicht ermittelbar\",\n        pickup_date: \"-\",\n        netto: 120\n    },\n]\n\nconst MachinesTable = ({setMachineID, setPickupDate}: any) => {\n    return(\n        <tbody className=\"bg-gray-50\">\n        {machineList.map((machine) =>\n            <tr key={machine.id} className=\"text-xs border-t\">\n                <td>\n                    {machine.type}: <span className=\"underline\">\n                        <Link href={\"/machines/\" + machine.id}>\n                            {machine.id}\n                        </Link></span><br/>\n                    <span>{machine.max_netto}</span></td>\n                <td>{machine.material}</td>\n                <td className=\"flex\">\n                    <div className=\"border border-black bg-white w-32 mr-1.5\">\n                        <div className={getFillerStyle(machine.load)}/>\n                    </div>\n                    {machine.load}%</td>\n                <td>{machine.plan_date}<br/>\n                    <span id={\"pickup_date_\" + machine.id}\n                        className={machine.pickup_date != \"-\"\n                                    ? \"flex underline\"\n                                    : \"flex\"}>\n                        {machine.pickup_date}\n                        <button onClick={() => {setMachineID(machine.id);\n                        setPickupDate(new Date(machine.pickup_date))}}>\n                            <img\n                            src={machine.pickup_date != \"-\"\n                            ? \"/icon_fragezeichen 1.svg\"\n                            : \"\"\n                        }/>\n                        </button>\n                    </span>\n                </td>\n                <td>{machine.netto}</td>\n            </tr>\n        )}\n        </tbody>\n    )\n}\n\nexport default MachinesTable","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/Popup.tsx",["272","273","274","275"],[],"import DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport API from \"axios\";\nimport {useState} from \"react\";\n\nconst Popup = ({machineID, pickupDate, setPickupDates, setMachineID, setPickupDate, pickupDates, machinesData,\n                  areDatesConfirmed, setAreDatesConfirmed, setNewPickupDates, newPickupDates, radioConfirmed,\n                   setRadioConfirmed}: any) => {\n\n    const [displayedDate, setDisplayedDate] = useState<any>()\n\n\n    const sendData = (responseBody: any) => {\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/machines',\n            responseBody)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    const updatePickupDates = (date: any) => {\n       // pickupDates = pickupDates.filter((obj:any) =>\n       // {return obj.machineID!=machineID})\n      //  pickupDates.push({machineID: machineID, taskEnd: date})\n      //  setPickupDates(pickupDates)\n        let machineData = machinesData.filter((obj: any)=> {return obj.machine_id == machineID})[0]\n        let newMachineData = {\n            machine_id: machineData.machine_id,\n            machineType: machineData.machineType,\n            machineName: machineData.machineName,\n            group: machineData.group,\n            waretype: machineData.waretype,\n            quality: machineData.quality,\n            index: machineData.index,\n            maxNetto: machineData.maxNetto,\n            minContainer: machineData.minContainer,\n            maxContainer: machineData.maxContainer,\n            averageThroughput: machineData.averageThroughput,\n            manualTara: machineData.manualTara,\n            minForFullStart: machineData.minForFullStart,\n            newFT111: machineData.newFT111,\n            automaticTara: machineData.automaticTara,\n            fillingType: machineData.fillingType,\n            plandateCalculation: machineData.plandateCalculation,\n            status: machineData.status,\n            client: machineData.client,\n            total_working_time: machineData.total_working_time,\n            total_working_weight: machineData.total_working_weight,\n            pickup_date: date.format('YYYY-MM-DD HH:mm'),\n            isDateConfirmed: radioConfirmed,\n            lastIndicate: machineData.lastIndicate,\n            lastTara: machineData.lastTara,\n        }\n\n        let newDates = newPickupDates.filter((obj:any) =>\n        {return obj.machine_id!=machineID})\n        newDates.push([{machine_id: machineID, date: date.format('YYYY-MM-DD HH:mm')}])\n        setNewPickupDates(newDates.flat())\n        let newDatesConfirmed = areDatesConfirmed.filter((obj:any) =>\n        {return obj.machine_id!=machineID})\n        newDatesConfirmed.push([{machine_id: machineID, date_confirmed: radioConfirmed}])\n        setAreDatesConfirmed(newDatesConfirmed.flat())\n        sendData(newMachineData)\n        setMachineID(\"\")\n        setPickupDate(\"\")\n        setRadioConfirmed(\"\")\n    }\n\n    const checkDay = () => {\n        const days =\n            {\n                0: \"Montag\",\n                1: \"Dienstag\",\n                2: \"Mittwoch\",\n                3: \"Donnerstag\",\n                4: \"Freitag\",\n                5: \"Samstag\",\n                6: \"Sonntag\"\n            }\n            if (pickupDate && pickupDate != \"\") {\n                const day = moment(pickupDate).day()\n            // @ts-ignore\n            return days[day]\n            }\n            // @ts-ignore\n          //  else if ( pickupDates.length != 0) {\n          //      const day = pickupDates.filter((obj:any) =>\n           //         {return obj.machineID==machineID})[0].taskEnd.toDate().getDay()\n            // @ts-ignore\n          //      return days[day]\n          //  }\n    }\n\n    return(\n        <div id=\"popup\"\n             className={ machineID != \"\"\n                 ? \"text-sm bg-white w-1/3 sm:rounded-lg shadow-md border p-5 space-y-4 \" +\n                 \"fixed -mt-64 left-0 right-0 m-auto\"\n                 : \"hidden\" }>\n            <p>Abholdatum bearbeiten (Masch.-ID: {machineID})</p>\n            <div className=\"flex\">\n                <div className=\"flex space-x-1\">\n                    <p className=\"m-auto\">Abholdatum:</p>\n                    <DatePicker className=\"shadow-md border text-center p-0.5\"\n                                // @ts-ignore\n                                selected={\n                                    pickupDate && pickupDate != \"\"\n                                        ? moment(pickupDate).toDate()\n                                        // @ts-ignore\n                                        //: pickupDates.length != 0 ?\n                                         //   pickupDates\n                                          //      .filter((obj:any) =>\n                                         //       {return obj.machineID==machineID})[0].taskEnd.toDate()\n                                            : \"\"\n                    }\n                                showTimeSelect dateFormat=\"dd.MM.yyyy HH:mm\"\n                                timeFormat=\"HH:mm\"\n                                onChange={(date:Date) => setPickupDate(moment(date))}/>\n                    <div className=\"m-auto\">({checkDay()})</div>\n                </div>\n            </div>\n            <div className=\"flex space-x-3\">\n                <div className=\"flex items-center\">\n                    <input id=\"radio-1\" type=\"radio\" value=\"\" name=\"default-radio\"\n                           checked={machinesData && radioConfirmed == false\n                                        ? true\n                                        : false\n                            }\n                           onChange={()=>{setRadioConfirmed(false)}}\n                           className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500\n                               dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700\n                               dark:border-gray-600\"/>\n                    <label htmlFor=\"radio-1\"\n                           className=\"flex ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n                        <img src=\"/icon_fragezeichen 1.svg\"/>Angefragt</label>\n                </div>\n                <div className=\"flex items-center\">\n                    <input id=\"radio-2\" type=\"radio\" value=\"\" name=\"default-radio\"\n                           checked={machinesData && radioConfirmed == true\n                               ? true\n                               : false\n                           }\n                           onChange={()=>{setRadioConfirmed(true)}}\n                           className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500\n                               dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700\n                               dark:border-gray-600\"/>\n                    <label htmlFor=\"radio-2\"\n                           className=\"flex ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n                        <img src=\"/icon_haken 1.svg\"/>Bestätigt</label>\n                </div>\n            </div>\n            <div id=\"popup-buttons\" className=\"space-x-5\">\n                <button className=\"sm:rounded-lg shadow-md border p-1\"\n                        onClick={() => {updatePickupDates(pickupDate)}}>\n                    Speichern</button>\n                <button className=\"sm:rounded-lg shadow-md border p-1\"\n                        onClick={() => {setMachineID(\"\");setPickupDate(\"\");setRadioConfirmed(\"\")}}>\n                    Abbrechen</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/Statistics.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/StorageSystem.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/StorageSystemDashboard.tsx",["276","277","278","279","280","281","282","283"],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/start/Summary.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/impressum.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/index.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/machines/[id].tsx",["284","285"],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/edit-machine/[id].tsx",["286"],[],"import API from \"axios\";\nimport React, {useEffect, useState} from \"react\";\nimport {useRouter} from \"next/router\";\nimport Link from \"next/link\";\n\nconst EditMachine = () => {\n    const router = useRouter()\n    const pid = router.query\n\n    const [data, setData] = useState({\n        machine_id: 0, machineType: \"\", machineName: \"\", group: \"\", waretype: \"\", quality: \"\",\n        index: \"\", maxNetto: 0, minContainer: 0, maxContainer: 0, averageThroughput: 0, manualTara: \"\",\n        minForFullStart: 0, newFT111: false, automaticTara: false, fillingType: \"\", plandateCalculation: \"\", status: \"\",\n        client: \"\"\n        }\n    );\n    const [waretypes, setWaretypes] = useState<any>();\n    const [clients, setClients] = useState<any>();\n    const [priceMatrices, setPriceMatrices] = useState<any>();\n    const [indeces, setIndeces] = useState<any>([]);\n    const [company, setCompany] = useState<any>();\n\n    useEffect(() => {\n\n        if (priceMatrices) {\n            let indecesList: any = []\n            for (let matrix in priceMatrices) {\n                if (priceMatrices[matrix].indeces) {\n                    for (let index in priceMatrices[matrix].indeces) {\n                        indecesList.push(priceMatrices[matrix].indeces[index])\n                    }\n                }\n                if (indeces == \"\") {\n                    setIndeces(indecesList)\n                }\n            }\n        }\n        const apiName = 'https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/machines';\n\n        API.get(apiName)\n            .then((response) => {\n                setData(response.data.Items.filter((item: any) => item.machine_id == pid.id)[0]);\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n        API.get('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/waretypes')\n            .then((response) => {\n                setWaretypes(response.data.Items);\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n        API.get('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/clients')\n            .then((response) => {\n                setClients(response.data.Items);\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n        API.get('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices')\n            .then((response) => {\n                setPriceMatrices(response.data.Items)\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n\n        setCompany(sessionStorage.getItem(\"company\"))\n\n\n    }, [data.index] );\n\n    const responseBody = {machine_id: 0, machineType: \"\", machineName: \"\", group: \"\", waretype: \"\", quality: \"\",\n    index: \"\", maxNetto: 0, minContainer: 0, maxContainer: 0, averageThroughput: 0, manualTara: \"\", minForFullStart: 0,\n    newFT111: false, automaticTara: false, fillingType: \"\", plandateCalculation: \"\", status: \"\", client: \"\"}\n\n    const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        responseBody.machine_id = data.machine_id\n        responseBody.machineType =  data.machineType\n        responseBody.machineName =  data.machineName\n        responseBody.group =  data.group\n        responseBody.waretype =  data.waretype\n        responseBody.quality =  data.quality\n        responseBody.index =  data.index\n        responseBody.maxNetto =  data.maxNetto\n        responseBody.minContainer =  data.minContainer\n        responseBody.maxContainer =  data.maxContainer\n        responseBody.averageThroughput =  data.averageThroughput\n        responseBody.manualTara =  data.manualTara\n        responseBody.minForFullStart =  data.minForFullStart\n        responseBody.newFT111 =  data.newFT111\n        responseBody.automaticTara =  data.automaticTara\n        responseBody.fillingType =  data.fillingType\n        responseBody.plandateCalculation =  data.plandateCalculation\n        responseBody.status =  data.status\n        responseBody.client =  data.client\n        console.log(responseBody)\n        sendData(responseBody)\n    }\n\n    const sendData = (responseBody: any) => {\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/machines',\n            responseBody)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    console.log(data)\n    return(\n        <div id=\"content-page\" className=\"mx-20 overflow-auto h-full\">\n            <Link href={company ? \"/master-data/\"+company.company_id : \"\"}>\n                <button className=\"float-right border ml-auto p-1.5 px-3.5 font-bold border-accent-color-1 bg-accent-color-4\n                        hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\">← Zurück\n                </button>\n            </Link>\n            <p className=\"mb-7 text-3xl font-bold\">Maschinen {pid.id}\n                {data && data.machineName != '' ? ' (' +  data.machineName + ')' : ''}</p>\n            <div>\n                <form onSubmit={onSubmitHandler}>\n                    <table className=\"text-sm\">\n                        <tbody>\n                        <tr>\n                            <td className=\"p-1 pl-0\">Maschinen ID</td>\n                            <td className=\"p-1 pl-0\">\n                                <input id=\"machineID\" className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       required={true}\n                                       defaultValue={pid.id}\n                                       onChange={(e)=>\n                                           setData({...data, machine_id: parseInt(e.target.value)})}/>\n                            </td>\n                            <td className=\"p-1 pl-3\">Durchsatz Durchschnitt</td>\n                            <td className=\"p-1 pl-0\">\n                                <input className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       defaultValue={data ? data.averageThroughput : ''}\n                                       onChange={(e)=>\n                                           setData({...data, averageThroughput: parseInt(e.target.value)})}/>\n                            </td>\n                        </tr>\n                        <tr className=\"h-8\">\n                            <td className=\"p-1 pl-0\">Maschinentyp</td>\n                            <td className=\"p-1 pl-0\">\n                                <select id=\"machineType\" className=\"w-full pl-2.5 py-0.5 appearance-none border rounded\n                                bg-[url('https://www.svgrepo.com/show/80156/down-arrow.svg')]\n                                bg-no-repeat bg-[length:15px] [background-position-x:95%]\n                                [background-position-y:5px]\"\n                                        defaultValue={data?data.machineType:'esb'}\n                                        onChange={(e)=>\n                                            setData({...data, machineType: e.target.value})}>\n                                    <option>esb</option>\n                                    <option>bw</option>\n                                    <option>Silo</option>\n                                </select>\n                            </td>\n                            <td className=\"p-1 pl-3\">Man. Tara (Maschine)</td>\n                            <td className=\"p-1 pl-0\">\n                                <input className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       defaultValue={data ? data.manualTara : '0'}\n                                       onChange={(e)=>\n                                           setData({...data, manualTara: e.target.value})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"p-1 pl-0 pr-12\">Machinenbezeichnung</td>\n                            <td className=\"p-1 pl-0\">\n                                <input id=\"machineName\" className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       required={true}\n                                       defaultValue={data ? data.machineName : ''}\n                                       onChange={(e)=>\n                                           setData({...data, machineName: e.target.value})}/>\n                            </td>\n                            <td className=\"p-1 pl-3\">Min. Füllmenge für Füll-Start</td>\n                            <td className=\"p-1 pl-0\">\n                                <input className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       defaultValue={data ? data.minForFullStart : '0'}\n                                       onChange={(e)=>\n                                           setData({...data, minForFullStart: parseInt(e.target.value)})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"p-1 pl-0\">Gruppierung</td>\n                            <td className=\"p-1 pl-0\">\n                                <input className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       defaultValue={data ? data.group : ''}\n                                       onChange={(e)=>\n                                           setData({...data, group: e.target.value})}/>\n                            </td>\n                            <td className=\"p-1 pl-3 pr-12\">Neue Berechnung FT-111 (automatisch)</td>\n                            <td className=\"p-1 pl-0.5\">\n                                <input type=\"checkbox\"\n                                       checked={data ? data.newFT111 : false}\n                                       onChange={(e)=>\n                                           setData({...data, newFT111: e.target.checked})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"p-1 pl-0\">Warentyp</td>\n                            <td className=\"p-1 pl-0\">\n                                <select className=\"w-full pl-2.5 py-0.5 appearance-none\n                            border rounded\n                                bg-[url('https://www.svgrepo.com/show/80156/down-arrow.svg')]\n                                bg-no-repeat bg-[length:15px] [background-position-x:95%]\n                                [background-position-y:5px]\"\n                                        defaultValue={data ? data.waretype : ''}\n                                        onChange={(e)=>\n                                            setData({...data, waretype: e.target.value})}>\n                                    {waretypes ?\n                                        waretypes\n                                            .sort(function (a: any, b: any) {\n                                            if (a.name_waretype < b.name_waretype) {\n                                                return -1;\n                                            }\n                                            if (a.name_waretype > b.name_waretype) {\n                                                return 1;\n                                            }\n                                            return 0;\n                                            })\n                                            .map((item: any)=>\n                                        <option key={item.waretype_id}>{item.name_waretype}</option>\n                                    )\n                                        : ''}\n                                </select>\n                            </td>\n                            <td className=\"p-1 pl-3\">Einmaliges Tarieren</td>\n                            <td className=\"p-1 pl-0.5\">\n                                <input type=\"checkbox\"\n                                       checked={data ? data.automaticTara : false}\n                                       onChange={(e)=>\n                                           setData({...data, automaticTara: e.target.checked})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"p-1 pl-0\">Warenqualität</td>\n                            <td className=\"p-1 pl-0\">\n                                <select className=\"w-full pl-2.5 py-0.5 appearance-none border rounded\n                                bg-[url('https://www.svgrepo.com/show/80156/down-arrow.svg')]\n                                bg-no-repeat bg-[length:15px] [background-position-x:95%]\n                                [background-position-y:5px]\"\n                                        defaultValue={data ? data.quality : ''}\n                                        onChange={(e)=>\n                                            setData({...data, quality: e.target.value})}>\n                                    <option>normal</option>\n                                    <option>gebrochen</option>\n                                </select>\n                            </td>\n                            <td className=\"p-1 pl-3\">Befüllart</td>\n                            <td className=\"p-1 pl-0\">\n                                <select className=\"w-full pl-2.5 py-0.5 appearance-none\n                                border rounded\n                                bg-[url('https://www.svgrepo.com/show/80156/down-arrow.svg')]\n                                bg-no-repeat bg-[length:15px] [background-position-x:95%]\n                                [background-position-y:5px]\"\n                                        defaultValue={data ? data.fillingType : ''}\n                                        onChange={(e)=>\n                                            setData({...data, fillingType: e.target.value})}>\n                                    <option>Automatisch</option>\n                                    <option>Manuell</option>\n                                </select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"p-1 pl-0\">Index</td>\n                            <td className=\"p-1 pl-0\">\n                                <select className=\"w-full pl-2.5 py-0.5 appearance-none\n                                border rounded\n                                bg-[url('https://www.svgrepo.com/show/80156/down-arrow.svg')]\n                                bg-no-repeat bg-[length:15px] [background-position-x:95%]\n                                [background-position-y:5px]\"\n                                        value={ data.index }\n                                        onChange={(e) =>\n                                            setData({...data, index: e.target.value})}>\n                                    <option key={\"noIndex\"}>{\"- kein Index -\"}</option>\n                                    {priceMatrices ? indeces.map((index: any) =>\n                                        <option key={index}>{index}</option>\n                                    ): \"\"}\n\n                                </select>\n                            </td>\n                            <td className=\"p-1 pl-3\">Plandatum Berechnung</td>\n                            <td className=\"p-1 pl-0\">\n                                <select className=\"w-full pl-2.5 py-0.5\n                                appearance-none border rounded\n                                bg-[url('https://www.svgrepo.com/show/80156/down-arrow.svg')]\n                                bg-no-repeat bg-[length:15px] [background-position-x:95%]\n                                [background-position-y:5px]\"\n                                        value={data.plandateCalculation}\n                                        onChange={(e)=>\n                                            setData({...data, plandateCalculation: e.target.value})}>\n                                    <option>Plandatum V.1</option>\n                                    <option>Plandatum V.2</option>\n                                </select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"p-1 pl-0\">Max Netto</td>\n                            <td className=\"p-1 pl-0\">\n                                <input className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       defaultValue={data ? data.maxNetto : 0}\n                                       onChange={(e)=>\n                                           setData({...data, maxNetto: parseInt(e.target.value)})}/>\n                            </td>\n                            <td className=\"p-1 pl-3\">Status</td>\n                            <td className=\"p-1 pl-0\">\n                                <select className=\"w-full pl-2.5 py-0.5\n                                appearance-none border rounded\n                                bg-[url('https://www.svgrepo.com/show/80156/down-arrow.svg')]\n                                bg-no-repeat bg-[length:15px] [background-position-x:95%]\n                                [background-position-y:5px]\"\n                                        value={data ? data.status : ''}\n                                        onChange={(e)=>\n                                            setData({...data, status: e.target.value})}>\n                                    <option>Wird befüllt (1)</option>\n                                    <option>kein Container (2)</option>\n                                    <option>Container tariert (3)</option>\n                                    <option>Übergewicht (4)</option>\n                                    <option>Fertig (5)</option>\n                                    <option>Abholung (6)</option>\n                                    <option>Stillstand (7)</option>\n                                    <option>Containertausch (8)</option>\n                                </select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"p-1 pl-0\">Min Container Gewicht</td>\n                            <td className=\"p-1 pl-0\">\n                                <input className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       defaultValue={data ? data.minContainer : 0}\n                                       onChange={(e)=>\n                                           setData({...data, minContainer: parseInt(e.target.value)})}/>\n                            </td>\n                            <td className=\"p-1 pl-3\">Kunde</td>\n                            <td className=\"p-1 pl-0\">\n                                <select className=\"w-full pl-2.5 py-0.5\n                                appearance-none border rounded\n                                bg-[url('https://www.svgrepo.com/show/80156/down-arrow.svg')]\n                                bg-no-repeat bg-[length:15px] [background-position-x:95%]\n                                [background-position-y:5px]\"\n                                        defaultValue={data ? data.client : ''}\n                                        onChange={(e)=>\n                                            setData({...data, client: e.target.value})}>\n                                    {clients ? clients.map((item: any)=>\n                                        <option key={item.client_id}>{item.client_name}</option>) : ''}\n                                </select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"p-1 pl-0\">Max Container Gewicht</td>\n                            <td className=\"p-1 pl-0\">\n                                <input className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       defaultValue=\"0\"\n                                       onChange={(e)=>\n                                           setData({...data, maxContainer: parseInt(e.target.value)})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td/>\n                        </tr>\n                        <tr>\n                            <td/>\n                            <td/>\n                            <td/>\n                            <td className=\"p-1 pl-0\">\n                                <button className=\"mb-10 float-right border p-1.5 px-3.5\n                                    font-bold border-accent-color-1 bg-accent-color-4\n                                    hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\" type=\"submit\">\n                                    Speichern\n                                </button>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <button className=\"mt-9 border p-1.5 px-3.5 font-bold border-accent-color-1 bg-accent-color-4\n                                       hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\">\n                        Maschine entfernen\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditMachine","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/new-machine.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/shift-calendar.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/shift-manager.tsx",["287"],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting/annual-evaluation.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting/annual-revenues.tsx",["288"],[],"import {useEffect, useState} from \"react\";\n\nconst revenues_2020 = [\n    {\n        product: \"Aluminium Späne, normal\",\n        weight: 46480,\n        value: 60024.07,\n        income: 60024.07,\n        delta: 0.00\n    },\n    {\n        product: \"Aluminium Späne, nass\",\n        weight: 6860,\n        value: 8807.58,\n        income: 7310.29,\n        delta: -1497.29\n    },\n    {\n        product: \"Aluminium Profile AlSi1, Fe frei\",\n        weight: 50540,\n        value: 75635.31,\n        income: 75635.31,\n        delta: 0.00\n    },\n    {\n        product: \"Mischschrott mit Eisenanhaftung, Alu Anteil ca. 70 %\",\n        weight: 13780,\n        value: 2388.75,\n        income: 2370.67,\n        delta: -18.08\n    }\n]\nconst revenues_2021 = [\n    {\n        product: \"Eisenspäne\",\n        weight: 1060,\n        value: 275.28,\n        income: 275.28,\n        delta: 0.00\n    },\n    {\n        product: \"Aluminium Späne, normal\",\n        weight: 112990,\n        value: 149397.55,\n        income: 149397.55,\n        delta: 0.00\n    },\n    {\n        product: \"Aluminium Späne, nass\",\n        weight: 10030,\n        value: 6132.90,\n        income: 6132.90,\n        delta: 0.00\n    },\n    {\n        product: \"Aluminium Profile AlSi1, Fe frei\",\n        weight: 57990,\n        value: 99753.66,\n        income: 99753.66,\n        delta: 0.00\n    },\n    {\n        product: \"Mischschrott mit Eisenanhaftung, Alu Anteil ca. 70 %\",\n        weight: 31450,\n        value: 8435.58,\n        income: 7851.48,\n        delta: -584.10\n    }\n]\nconst revenues_2022 = [\n    {\n        product: \"Mischschrott\",\n        weight: 17170,\n        value: 4931.18,\n        income: 4931.18,\n        delta: 0\n    },\n    {\n        product: \"Eisenspäne\",\n        weight: 18510,\n        value: 4788.59,\n        income: 4762.91,\n        delta: -25.68\n    },\n    {\n        product: \"Aluminium Späne, normal\",\n        weight: 80250,\n        value: 142491.14,\n        income: 142028.53,\n        delta: -462.61\n    },\n    {\n        product: \"Aluminium Späne, nass\",\n        weight: 9770,\n        value: 6909.20,\n        income: 6909.20,\n        delta: 0\n    },\n    {\n        product: \"Aluminium Profile AlSi1, Fe frei\",\n        weight: 47790,\n        value: 100481.65,\n        income: 100647.85,\n        delta: 166.20\n    },\n]\n\nconst AnnualRevenues = () => {\n    const [currentYearString, setCurrentYearString] = useState(\"2020\")\n    const [currentYear, setCurrentYear] = useState(revenues_2020)\n    const [totalWeight, setTotalWeight] = useState( 0);\n    const [totalValue, setTotalValue] = useState( 0);\n    const [totalIncome, setTotalIncome] = useState( 0);\n    const [totalDelta, setTotalDelta] = useState( 0);\n\n    const calculateTotalWeight = ()  => {\n        let weight = 0\n\n            for (let product in currentYear) {\n                weight = (weight + currentYear[product].weight)\n            }\n        return weight;\n    }\n    const calculateTotalValue = ()  => {\n        let value = 0\n\n        for (let product in currentYear) {\n            value = (value + currentYear[product].value)\n        }\n        return value;\n    }\n    const calculateTotalIncome = ()  => {\n        let income = 0\n\n        for (let product in currentYear) {\n            income = (income + currentYear[product].income)\n        }\n        return income;\n    }\n    const calculateTotalDelta = ()  => {\n        let delta = 0\n\n        for (let product in currentYear) {\n            delta = (delta + currentYear[product].delta)\n        }\n        return delta;\n    }\n\n    useEffect(() => {\n        let weight = calculateTotalWeight()\n        setTotalWeight(weight)\n        let income = calculateTotalIncome()\n        setTotalIncome(income)\n        let value = calculateTotalValue()\n        setTotalValue(value)\n        let delta = calculateTotalDelta()\n        setTotalDelta(delta)\n\n    }, [currentYear]);\n\n    return(\n        <div id=\"content-page\" className=\"px-20\">\n            <p className=\"mt-9 text-3xl font-bold mb-5\">Jahreserlöse {currentYearString}</p>\n            <div className=\"mb-2.5\">\n                <span onClick={()=>{setCurrentYear(revenues_2020);setCurrentYearString(\"2020\")}}\n                      className=\"text-sm cursor-pointer underline m-1\">2020</span>|\n                <span onClick={()=>{setCurrentYear(revenues_2021);setCurrentYearString(\"2021\")}}\n                      className=\"text-sm cursor-pointer underline m-1\">2021</span>|\n                <span onClick={()=>{setCurrentYear(revenues_2022);setCurrentYearString(\"2022\")}}\n                      className=\"text-sm cursor-pointer underline m-1\">2022</span>\n            </div>\n\n            <div className=\"sm:rounded-lg shadow-md border\">\n                <table className=\"flex-row w-full table-auto\">\n                    <thead>\n                    <tr className=\"text-xs text-gray-500 border-b text-left\">\n                        <th className=\"font-normal\">Warenart</th>\n                        <th className=\"text-right font-normal\">Werksgewicht</th>\n                        <th className=\"text-right font-normal\">Betrag Werksgewicht</th>\n                        <th className=\"text-right font-normal\">Betrag erhalten</th>\n                        <th className=\"text-right font-normal\">Delta</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"bg-gray-50\">\n                    {currentYear.map((year) =>\n                        <tr key={year.product} className=\"text-xs border-t\">\n                            <td>{year.product}</td>\n                            <td className=\"text-right\">{year.weight}</td>\n                            <td className=\"text-right\">{year.value} €</td>\n                            <td className=\"text-right\">{year.income} €</td>\n                            <td className=\"text-right\">{year.delta} €</td>\n                        </tr>\n                        )}\n                    <tr>\n                        <td colSpan={5}>\n                            <hr/>\n                        </td>\n                    </tr>\n                    <tr className=\"text-xs\">\n                        <td/>\n                        <td className=\"text-right\">\n                            {totalWeight}\n                        </td>\n                        <td className=\"text-right\">\n                            {totalValue} €\n                        </td>\n                        <td className=\"text-right\">\n                            {totalIncome} €\n                        </td>\n                        <td className=\"text-right\">\n                            {totalDelta.toFixed(2)} €\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AnnualRevenues","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting/co2-evaluation.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting/control-documents.tsx",["289","290"],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/reporting.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/storage-systems.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/edit-worker/[user].tsx",["291"],[],"import React, {useState, useEffect} from \"react\";\nimport API from \"axios\";\nimport {useRouter} from \"next/router\";\nimport Link from \"next/link\";\n\nconst EditWorker = () => {\n\n    const router = useRouter()\n    const pid = router.query\n\n    const [data, setData] = useState({\n        userName: '', initials: '', email: '', loginName: '', password: '',\n        controlDocumentsPermission: false, monthlyEvaluationPermission: false,\n        yearlyEvaluationPermission: false, shiftEvaluationPermission: false,\n        annualRevenuePermission: false, CO2EvaluationPermission: false, wasteBalancePermission: false,\n        merchandiseManagementPermission: false, logsPermission: false, customerLogsPermission: false,\n        totalAmountPermission: false, abholdatumPopupPermission: false, indexMatrixPermission: false,\n        adminIndexManagementPermission: false, calculationPermission: false, storageSystemPermission: false,\n        showPricesPermission: false, enterAmountReceivedPermission: false, client_id: 0,\n    });\n\n    useEffect(() => {\n        const apiName = 'https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/users';\n\n        API.get(apiName)\n            .then((response) => {\n                setData(response.data.Items.filter((item: any) => item.loginName == pid.user)[0]);\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n        // @ts-ignore\n        setData({...data, client_id: sessionStorage.getItem(\"company\")[0].client_id})\n    }, [pid])\n\n\n    const responseBody = {\n        userName: '', initials: '', email: '', loginName: '', password: '',\n        controlDocumentsPermission: false, monthlyEvaluationPermission: false,\n        yearlyEvaluationPermission: false, shiftEvaluationPermission: false,\n        annualRevenuePermission: false, CO2EvaluationPermission: false, wasteBalancePermission: false,\n        merchandiseManagementPermission: false, logsPermission: false, customerLogsPermission: false,\n        totalAmountPermission: false, abholdatumPopupPermission: false, indexMatrixPermission: false,\n        adminIndexManagementPermission: false, calculationPermission: false, storageSystemPermission: false,\n        showPricesPermission: false, enterAmountReceivedPermission: false, client_id: 0,\n    }\n\n    const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        responseBody.userName = data.userName\n        responseBody.initials = data.initials\n        responseBody.email = data.email\n        responseBody.loginName = data.loginName\n        responseBody.password = data.password\n        responseBody.controlDocumentsPermission = data.controlDocumentsPermission\n        responseBody.monthlyEvaluationPermission = data.monthlyEvaluationPermission\n        responseBody.yearlyEvaluationPermission = data.yearlyEvaluationPermission\n        responseBody.shiftEvaluationPermission = data.shiftEvaluationPermission\n        responseBody.annualRevenuePermission = data.annualRevenuePermission\n        responseBody.CO2EvaluationPermission = data.CO2EvaluationPermission\n        responseBody.wasteBalancePermission = data.wasteBalancePermission\n        responseBody.merchandiseManagementPermission = data.merchandiseManagementPermission\n        responseBody.logsPermission = data.logsPermission\n        responseBody.customerLogsPermission = data.customerLogsPermission\n        responseBody.totalAmountPermission = data.totalAmountPermission\n        responseBody.abholdatumPopupPermission = data.abholdatumPopupPermission\n        responseBody.indexMatrixPermission = data.indexMatrixPermission\n        responseBody.adminIndexManagementPermission = data.adminIndexManagementPermission\n        responseBody.calculationPermission = data.calculationPermission\n        responseBody.storageSystemPermission = data.storageSystemPermission\n        responseBody.showPricesPermission = data.showPricesPermission\n        responseBody.enterAmountReceivedPermission = data.enterAmountReceivedPermission\n        responseBody.client_id = data.client_id\n        sendData(responseBody)\n    }\n\n    const sendData = (responseBody: any) => {\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/users',\n            responseBody)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    return(\n        <div id=\"content-page\" className=\"px-20 h-full overflow-auto\">\n                <Link href=\"/\">\n                    <button className=\"float-right border ml-auto p-1.5 px-3.5 font-bold border-accent-color-1 bg-accent-color-4\n                        hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\">← Zurück\n                    </button>\n                </Link>\n                <p className=\"mt-10 text-2xl font-bold mb-5\">Mitarbeiter</p>\n            <div>\n                <form onSubmit={onSubmitHandler}>\n                    <table className=\"text-sm space-y-5\">\n                        <tbody>\n                            <tr>\n                                <td className=\"text-sm font-semibold\">Name:</td>\n                                <td>\n                                    <input id=\"userName\" className=\"border rounded w-full pl-2.5 py-0.5\"\n                                           onChange={(e)=>\n                                               setData({...data, userName: e.target.value})}\n                                           required={true}\n                                           defaultValue={data ? data.userName : ''}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"text-sm font-semibold\">Kürzel:</td>\n                                <td>\n                                    <input id=\"initials\" className=\"border rounded pl-2.5 py-0.5\"\n                                           onChange={(e)=>\n                                               setData({...data, initials: e.target.value})}\n                                           defaultValue={data ? data.initials : ''}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"text-sm font-semibold\">Email:</td>\n                                <td>\n                                    <input id=\"email\" className=\"border rounded pl-2.5 py-0.5\"\n                                           onChange={(e)=>\n                                               setData({...data, email: e.target.value})}\n                                           required={ true }\n                                           defaultValue={data ? data.email: ''}\n                                    />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <p className=\"mt-5 text-xl font-bold mb-5\">Logindaten</p>\n                    <table className=\"text-sm space-y-5\">\n                        <tbody>\n                        <tr>\n                            <td className=\"text-sm font-semibold\">Loginname:</td>\n                            <td>\n                                <input id=\"loginName\" className=\"border rounded w-full pl-2.5 py-0.5\"\n                                       onChange={(e)=>\n                                           setData({...data, loginName: e.target.value})}\n                                       required={true}\n                                       defaultValue={data ? data.loginName: ''}\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-sm font-semibold\">Passwort:</td>\n                            <td>\n                                <input id=\"password\"\n                                       type=\"password\"\n                                       className=\"border rounded pl-2.5 py-0.5\"\n                                       onChange={(e)=>\n                                           setData({...data, password: e.target.value})}\n                                       />\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <hr className=\"mt-5\"/>\n                    <p className=\"mt-5 text-xl font-bold mb-5\">Berechtigungen</p>\n                    <div className=\"text-sm space-y-3 mb-10\">\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                checked={data ? data.controlDocumentsPermission : false}\n                                onChange={(e)=>\n                                    setData({...data, controlDocumentsPermission: e.target.checked})}\n                                />\n                            Kontrollbelege\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.monthlyEvaluationPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, monthlyEvaluationPermission: e.target.checked})}\n                            />\n                            Monatsauswertung\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.yearlyEvaluationPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, yearlyEvaluationPermission: e.target.checked})}\n                            />\n                            Jahresauswertung\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.shiftEvaluationPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, shiftEvaluationPermission: e.target.checked})}\n                            />\n                            Schichtauswertung\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.annualRevenuePermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, annualRevenuePermission: e.target.checked})}\n                            />\n                            Jahreserlöse\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.CO2EvaluationPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, CO2EvaluationPermission: e.target.checked})}\n                            />\n                            CO² Auswertung\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.wasteBalancePermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, wasteBalancePermission: e.target.checked})}\n                            />\n                            Abfallbilanz\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.merchandiseManagementPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, merchandiseManagementPermission: e.target.checked})}\n                            />\n                            Warenwirtschaft\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.logsPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, logsPermission: e.target.checked})}\n                            />\n                            Logs\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.customerLogsPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, customerLogsPermission: e.target.checked})}\n                            />\n                            Logs (Kunde)\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.totalAmountPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, totalAmountPermission: e.target.checked})}\n                            />\n                            Gesamtsumme\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.abholdatumPopupPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, abholdatumPopupPermission: e.target.checked})}\n                            />\n                            Abholdatum Popup\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.indexMatrixPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, indexMatrixPermission: e.target.checked})}\n                            />\n                            Indexmatrix\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.adminIndexManagementPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, adminIndexManagementPermission: e.target.checked})}\n                            />\n                            Indexverwaltung (Admin)\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.calculationPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, calculationPermission: e.target.checked})}\n                            />\n                            Berechnung\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.storageSystemPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, storageSystemPermission: e.target.checked})}\n                            />\n                            Für Entsorger: Lagersysteme\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.showPricesPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, showPricesPermission: e.target.checked})}\n                            />\n                            Preise anzeigen\n                        </p>\n                        <p>\n                            <input type=\"checkbox\" className=\"mr-3\"\n                                   checked={data ? data.totalAmountPermission : false}\n                                   onChange={(e)=>\n                                       setData({...data, totalAmountPermission: e.target.checked})}\n                            />\n                            Monatsauswertung: Betrag erhalten eintragen\n                        </p>\n                    </div>\n                    <button className=\"mb-10 float-right border p-1.5 px-3.5\n                                 font-bold border-accent-color-1 bg-accent-color-4\n                        hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\" type=\"submit\">\n                        Speichern\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditWorker","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/new-worker.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/[client].tsx",["292"],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/edit-client/[client].tsx",["293","294"],[],"import React, {useState, useEffect} from \"react\";\nimport API from \"axios\";\nimport {useRouter} from \"next/router\";\nimport Link from \"next/link\";\n\nconst EditClient= () => {\n\n    const router = useRouter()\n    const pid = router.query\n\n    const [lands, setLands] = useState<any[]>([{land_name: \"\"}]);\n    const [data, setData] = useState({\n        address_id: \"0\", city: \"\", client_id: 0, client_name: \"\", client_number: \"0\", client_status: \"0\", co_distance: 0,\n        co_load: 0, co_orig_amount: 0, co_orig_trips: 0, co_orig_year: 0, co_show: 0, contact: \"\", country_id: 1,\n        email: \"\", land_id: 0, logo_url: \"\", next_pdf_nr: 0, spokesperson: \"\", street: \"\", telefon: \"\",\n        worktime_mail: 0, worktime_status: 0, zip_code: \"\", automatic_email: false,\n    });\n    const [landName, setLandName] = useState<any>(\"\")\n\n    useEffect(() => {\n        const apiName = 'https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/clients';\n\n        API.get(apiName)\n            .then((response) => {\n                setData(response.data.Items.filter((item: any) => item.client_id == pid.client)[0])\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n        API.get('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/lands')\n            .then((response) => {\n                setLands(\n                    response.data.Items);\n                setLandName(lands.filter((land: any)=>land.land_id==data.land_id)[0].land_name)\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n    }, [pid, lands[0].land_name]);\n\n\n    const responseBody = {\n        address_id: \"0\", city: \"\", client_id: 0, client_name: \"\", client_number: \"0\", client_status: \"0\", co_distance: 0,\n        co_load: 0, co_orig_amount: 0, co_orig_trips: 0, co_orig_year: 0, co_show: 0, contact: \"\", country_id: 1,\n        email: \"\", land_id: 0, logo_url: \"\", next_pdf_nr: 0, spokesperson: \"\", street: \"\", telefon: \"\",\n        worktime_mail: 0, worktime_status: 0, zip_code: \"\", automatic_email: false,\n    }\n\n    const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        responseBody.address_id = data.address_id\n        responseBody.city = data.city\n        responseBody.client_id = data.client_id\n        responseBody.client_name = data.client_name\n        responseBody.client_number = data.client_number\n        responseBody.client_status = data.client_status\n        responseBody.co_distance = data.co_distance\n        responseBody.co_load = data.co_load\n        responseBody.co_orig_amount = data.co_orig_amount\n        responseBody.co_orig_trips = data.co_orig_trips\n        responseBody.co_orig_year = data.co_orig_year\n        responseBody.co_show = data.co_show\n        responseBody.contact = data.contact\n        responseBody.country_id = data.country_id\n        responseBody.email = data.email\n        responseBody.land_id = data.land_id\n        responseBody.logo_url = data.logo_url\n        responseBody.next_pdf_nr = data.next_pdf_nr\n        responseBody.spokesperson = data.spokesperson\n        responseBody.street = data.street\n        responseBody.telefon = data.telefon\n        responseBody.worktime_mail = data.worktime_mail\n        responseBody.worktime_status = data.worktime_status\n        responseBody.zip_code = data.zip_code\n        responseBody.automatic_email = data.automatic_email\n        sendData(responseBody)\n    }\n\n    const sendData = (responseBody: any) => {\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/clients',\n            responseBody)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    return(\n        <div id=\"content-page\" className=\"px-20 h-full overflow-auto\">\n            <Link href=\"/master-data/0\">\n                <button className=\"float-right border ml-auto p-1.5 px-3.5 font-bold border-accent-color-1 bg-accent-color-4\n                        hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs mt-10\">← Zurück\n                </button>\n            </Link>\n            <p className=\"mt-10 text-2xl font-bold mb-5\">Stammdaten</p>\n            <div>\n                <form onSubmit={onSubmitHandler}>\n                    <table className=\"text-xs\">\n                        <tbody>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">Firma:</td>\n                            <td>\n                                <input id=\"company\" className=\"border rounded px-2.5 py-0.5\"\n                                       defaultValue={data ? data.client_name : ''}\n                                       onChange={(e)=>\n                                           setData({...data, client_name: e.target.value})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">KundenNr.:</td>\n                            <td>\n                                <input id=\"client_number\" className=\"border rounded px-2.5 py-0.5\"\n                                       defaultValue={data ? data.client_number : ''}\n                                       onChange={(e)=>\n                                           setData({...data, client_number: e.target.value})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">PLZ:</td>\n                            <td>\n                                <input id=\"zip_code\" className=\"border rounded px-2.5 py-0.5\"\n                                       defaultValue={data ? data.zip_code : ''}\n                                       onChange={(e)=>\n                                           setData({...data, zip_code: e.target.value})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">Stadt:</td>\n                            <td>\n                                <input id=\"city\" className=\"border rounded px-2.5 py-0.5\"\n                                       defaultValue={data ? data.city : ''}\n                                       onChange={(e)=>\n                                           setData({...data, city: e.target.value})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">Straße:</td>\n                            <td>\n                                <input id=\"street\" className=\"border rounded px-2.5 py-0.5\"\n                                       defaultValue={data ? data.street : ''}\n                                       onChange={(e)=>\n                                           setData({...data, street: e.target.value})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">Telefon:</td>\n                            <td>\n                                <input id=\"telephone\" className=\"border rounded px-2.5 py-0.5\"\n                                       defaultValue={data ? data.telefon : ''}\n                                       onChange={(e)=>\n                                           setData({...data, telefon: e.target.value})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">E-Mail:</td>\n                            <td>\n                                <input id=\"email\" className=\"border rounded px-2.5 py-0.5\"\n                                       defaultValue={data ? data.email : ''}\n                                       onChange={(e)=>\n                                           setData({...data, email: e.target.value})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">Bundesland (D):</td>\n                            <td>\n                                <select id=\"machineType\"\n                                        className=\"pl-2.5 py-0.5 appearance-none border rounded\n                                        bg-[url('https://www.svgrepo.com/show/80156/down-arrow.svg')]\n                                        bg-no-repeat bg-[length:15px] [background-position-x:95%]\n                                        [background-position-y:5px]\"\n                                        value={ landName }\n                                        onChange={ lands ?\n                                    (e)=>\n                                            setData({...data, land_id: parseInt(\n                                                lands\n                                                    .filter((land: any)=>\n                                                        land.land_name==e.target.value)[0].land_id)})\n                                        : (e)=>{}}>\n                                    {lands\n                                        ? lands\n                                            .map((land :any) =>\n                                                <option key={land.land_name} id={land.land_id}>{land.land_name}</option>\n                                            )\n                                    : ''}\n                                </select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">Mailversand automatisch <br/>\n                                Arbeitszeiten:</td>\n                            <td>\n                                <input id=\"automatic_email\" className=\"border rounded pl-2.5 py-0.5\" type=\"checkbox\"\n                                       checked={data ? data.automatic_email : false}\n                                       onChange={(e)=>\n                                           setData({...data, automatic_email: e.target.checked})}/>\n                                <span>&nbsp; aktivieren<br/>\n                                    Erstversand Mittwoch 15 Uhr, Nachfrage nächster Tag 15 Uhr</span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">Ansprechpartner:</td>\n                            <td>\n                                <input id=\"spokesperson\" className=\"border rounded pl-2.5 py-0.5\"\n                                       defaultValue={data ? data.spokesperson : ''}\n                                       onChange={(e)=>\n                                           setData({...data, spokesperson: e.target.value})}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"text-xs font-semibold\">Logo:</td>\n                            <td>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <hr className=\"mt-5\"/>\n                    <p className=\"mt-5 text-xl font-bold mb-5\">Benutzerkonto</p>\n                    <div className=\"text-sm space-y-3 mb-10\">\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td className=\"text-xs font-semibold\">Benutzer:\n                                        <input id=\"user\" className=\"border rounded pl-2.5 py-0.5\"/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"text-xs font-semibold\">Passwort:\n                                        <input id=\"user-password\" className=\"border rounded pl-2.5 py-0.5\"/>\n                                    <span className=\"font-normal\"> (wird nicht angezeigt)</span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <button className=\"mb-10 float-right border p-1.5 px-3.5\n                                 font-bold border-accent-color-1 bg-accent-color-4\n                        hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\" type=\"submit\">\n                        Speichern\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditClient","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/helpers/pdf.tsx",["295","296"],[],"// @ts-ignore\nimport pdfMake from 'pdfmake/build/pdfmake';\n// @ts-ignore\nimport pdfFonts from 'pdfmake/build/vfs_fonts'\nimport {useEffect, useState} from \"react\";\nimport moment from \"moment\";\npdfMake.vfs = pdfFonts.pdfMake.vfs\n\npdfMake.fonts = {\n    Poppins: {\n        normal: 'Poppins-Regular.ttf',\n        bold: 'Poppins-Medium.ttf',\n    },\n\n    // download default Roboto font from cdnjs.com\n    Roboto: {\n        normal: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Regular.ttf',\n        bold: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Medium.ttf',\n        italics: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Italic.ttf',\n        bolditalics: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-MediumItalic.ttf'\n    },\n}\nconst PDF = ({document_id, brutto, netto, timestamp, tara, machine_id, company, waretype, sort}: any) => {\n    const [image, setImage] = useState('');\n    const [url, setUrl] = useState(null)\n\n    useEffect(() => {\n        const object = async () => {\n            const myobj = {\n                image: await getBase64ImageFromURL(\n                    \"/../../e-findo-logo2.jpeg\"\n                ),\n                width: 39,\n                height: 44,\n                alignment: 'center'\n            }\n            // @ts-ignore\n            setImage(myobj)\n        }\n        object();\n    }, []);\n\n    const docDefinition = {\n        content: [\n            {columns: [\n                {stack: [\n                    {text: ' '},\n                    {text: `MCS - Money Control System`, listType: 'none'},\n                    {text: ` `, listType: 'none'},\n                    {text: `Lieferant Nr.: ${company.client_number}`, listType: 'none'},\n                    {text: `${company.client_name}`, listType: 'none'},\n                    {text: `${company.street}`, listType: 'none'},\n                    {text: `${company.zip_code} ${company.city}`, listType: 'none'},\n                    {text: ` `, listType: 'none'},\n                    {text: ` `, listType: 'none'},\n                    {text: `Empfänger:`, listType: 'none'},\n                    {text: `Rail Kontor AG`, listType: 'none'},\n                    {text: `Kesselerlochstrasse 126`, listType: 'none'},\n                    {text: `CH- 8240 Thayingen`, listType: 'none'},\n                ]},\n                {stack : [\n                        image,\n                        {text: ' '},\n                        {text: 'www.e-findo.de'}], alignment: 'center', margin: [100, 0, 0, 0], fontSize: 8,\n                        color: 'gray'}\n                ]},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: `Gewichtskontrollschein`, bold: true, color: 'black', fontSize: 11},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: `Wiege Nr.: ${company.client_number}-${parseInt(company.client_number) + document_id}`},\n            {text: `Sorte Nr.: ${sort} / Warenart: ${waretype}`},\n            {text: ` `},\n            {table: {\n\n                    headerRows: 1,\n                    widths: [ '*', '*', '*', '*', '*'],\n\n                    body: [\n                        [ 'Datum', 'Masch.ID', 'Uhrzeit', 'Lfd. Nr.',\n                            {text: 'Gewicht in kg', alignment: 'right'},],\n                        [ `${moment(timestamp).format('DD.MM.yyyy')}`,\n                            `${machine_id}`,\n                            `${moment(timestamp).format('HH:mm')}`,\n                            `${document_id}`,\n                            [\n                                {columns: [\n                                        {\n                                            width: '*',\n                                            text: 'Brutto'\n                                        },\n                                        {\n                                            width: '*',\n                                            text: `${brutto}`,\n                                            alignment: 'right'\n                                        },\n                                    ]},\n                                {columns: [\n                                        {\n                                            width: '*',\n                                            text: 'Tara'\n                                        },\n                                        {\n                                            width: '*',\n                                            text: `${tara}`,\n                                            alignment: 'right'\n                                        },\n                                    ]},\n                                {columns: [\n                                        {\n                                            width: '*',\n                                            text: 'Netto'\n                                        },\n                                        {\n                                            width: '*',\n                                            text: `${netto}`,\n                                            alignment: 'right'\n                                        },\n                                    ]},\n                            ],\n                        ]\n                        ,]\n\n                }\n            },\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: `Bemerkung:`},\n            {text: ` `},\n            {text: ` `},\n            {text: `Die Übernahme erfolgt vorbehaltlich der Befundfeststellung`\n                    + ` und/oder verdeckter Mängel, da eine Sofortkontrolle nicht`\n                    + ` möglich ist. Diese werden innerhalb drei Werktagen bekannt`\n                    + ` gegeben. Dastatsächlich geeichte Gewicht wird im Empfangswerk`\n                    + ` ermittelt.`},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {columns: [\n                    {\n                        width: '*',\n                        text: 'Fahrzeug-Kennzeichen:'\n                    },\n                    {\n                        width: '*',\n                        text: `Ware übernommen: ${moment().format('DD.MM.YYYY')}`,\n                        alignment: 'left'\n                    },\n                ]},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {text: ` `},\n            {columns: [\n                    {\n                        width: '*',\n                        text: 'Unterschrift Abgeber'\n                    },\n                    {\n                        width: '*',\n                        text: 'Unterschrift Frächter',\n                        alignment: 'left'\n                    },\n                ]},\n        ],\n\n        pageSize: 'A4',\n        pageMargins: [50, 75],\n\n        defaultStyle: {\n            fontSize: 9,\n            color: '#3F3C3E'\n        },\n\n        styles: {\n            header: {\n            }\n        }\n    };\n\n    const createPdf = () => {\n        const object = async () => {\n            const myobj = {\n                image: await getBase64ImageFromURL(\n                    \"/../../e-findo-logo2.jpeg\"\n                ),\n                width: 39,\n                height: 44,\n                alignment: 'center'\n            }\n            // @ts-ignore\n            setImage(myobj)\n        }\n        object();\n        // @ts-ignore\n        const pdfGenerator = pdfMake.createPdf(docDefinition);\n        pdfGenerator.getBlob((blob: any) => {\n            const url = URL.createObjectURL(blob)\n            // @ts-ignore\n            setUrl(url)\n            window.open(url, '_blank')\n        })\n    }\n\n    function getBase64ImageFromURL(url: any) {\n        return new Promise((resolve, reject) => {\n            let img = new Image();\n            img.setAttribute(\"crossOrigin\", \"anonymous\");\n            img.onload = () => {\n                let canvas = document.createElement(\"canvas\");\n                canvas.width = img.width;\n                canvas.height = img.height;\n                let ctx = canvas.getContext(\"2d\");\n                // @ts-ignore\n                ctx.drawImage(img, 0, 0);\n                let dataURL = canvas.toDataURL(\"image/png\");\n                resolve(dataURL);\n            };\n            img.onerror = error => {\n                reject(error);\n            };\n            img.src = url;\n        });\n    }\n\n    return (\n        <div>\n            <button onClick={createPdf}><img className=\"h-5\" src=\"/download-svgrepo-com.svg\"/></button>\n        </div>\n    )\n}\n\nexport default PDF;\n\n\n","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/helpers/fromHex.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/components/helpers/toHex.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/edit-indexgroup/[indexgroup_name].tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/edit-sort/[indexgroup_name].tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/edit-sort/sort/[sort_name].tsx",["297"],[],"import React, {useEffect, useState} from \"react\";\nimport API from \"axios\";\nimport Link from \"next/link\";\nimport {useRouter} from \"next/router\";\nimport fromHex from \"../../../components/helpers/fromHex\";\nimport toHex from \"../../../components/helpers/toHex\";\n\nconst SortEdit = () => {\n    const router = useRouter()\n    const pid = router.query\n\n    const [sort, setSort] = useState({\n        sort_name: \"\",\n        description: \"\",\n        indexgroup_name: \"\"\n    });\n\n    useEffect(() => {\n        let apiName = 'https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/sorts';\n\n        API.get(apiName)\n            .then((response) => {\n                setSort(response.data.Items.filter((sort: any) => sort.sort_name == fromHex(pid.sort_name))[0])\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n    }, []);\n\n    const responseBody = {sort_name: \"\", description: \"\", indexgroup_name: \"\"}\n\n    const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        responseBody.sort_name = sort.sort_name\n        responseBody.description = sort.description\n        responseBody.indexgroup_name = sort.indexgroup_name\n        deleteData(sort.sort_name)\n        sendData(responseBody)\n    }\n\n    const deleteData = (sort: any) => {\n        API.delete('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/sorts',\n            { data: { sort_name: fromHex(pid.sort_name) } })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        API.delete('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices',\n            { data: { price_matrix: fromHex(pid.sort_name) } })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    const sendData = (responseBody: any) => {\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/sorts',\n            responseBody)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices',\n            {price_matrix: responseBody.sort_name, indexgroup_name: responseBody.indexgroup_name})\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    return(\n        <div className=\"px-20\">\n            <Link href={\"/kalkulation/\"}>\n                <button className=\"float-right border ml-auto p-1.5 px-3.5 font-bold border-accent-color-1\n                        bg-accent-color-4 hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\">\n                    ← Zurück\n                </button>\n            </Link>\n            <p className=\"my-9 text-3xl font-bold\">Sorte bearbeiten</p>\n            <div className=\"flex\">\n                <form onSubmit={onSubmitHandler}>\n                    <p>Name:</p>\n                    <input className=\"border rounded pl-2.5 py-0.5 mr-1 mb-3\"\n                           defaultValue={fromHex(pid.sort_name)}\n                           onChange={(e)=>\n                               setSort({...sort, sort_name: e.target.value})}/>\n                    <p>Beschreibung:</p>\n                    <input className=\"border rounded pl-2.5 py-0.5 mr-1\"\n                           defaultValue={sort ? sort.description : \"\"}\n                           onChange={(e)=>\n                               setSort({...sort, description: e.target.value})}/>\n                    <p><button className=\"p-2 font-bold text-xs border-accent-color-1 bg-accent-color-4 hover:bg-accent-color-5\n                    sm:rounded-lg shadow-md border mt-5\">\n                        Speichern</button></p>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default SortEdit","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/index-management.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/new-indexgroup.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/new-sort/[indexgroup_name].tsx",["298"],[],"import React, {useEffect, useState} from \"react\";\nimport API from \"axios\";\nimport Link from \"next/link\";\nimport {useRouter} from \"next/router\";\nimport fromHex from \"../../components/helpers/fromHex\";\n\n\nconst NewSort = () => {\n    const router = useRouter()\n    const pid = router.query\n\n    const [sortName, setSortName] = useState<any>();\n    const [description, setDescription] = useState<any>();\n    const [indexgroupName, setIndexgroupName] = useState<any>();\n\n    useEffect(() => {\n        setIndexgroupName(fromHex(pid.indexgroup_name))\n    }, );\n\n    const responseBody = {sort_name: \"\", description: \"\", indexgroup_name: \"\"}\n\n    const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        responseBody.sort_name = sortName\n        responseBody.description = description\n        responseBody.indexgroup_name = indexgroupName\n        sendData(responseBody)\n    }\n\n    const sendData = (responseBody: any) => {\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/sorts',\n            responseBody)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices',\n            {price_matrix: responseBody.sort_name, indexgroup_name: indexgroupName})\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    return(\n        <div className=\"px-20\">\n            <Link href={\"/kalkulation/edit-sort/\" + pid.indexgroup_name}>\n                <button className=\"float-right border ml-auto p-1.5 px-3.5 font-bold border-accent-color-1 bg-accent-color-4\n                        hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\">← Zurück\n                </button>\n            </Link>\n            <p className=\"my-9 text-3xl font-bold\">Sorte bearbeiten</p>\n            <div className=\"flex\">\n                <form onSubmit={onSubmitHandler}>\n                    <p>Name:</p>\n                    <input className=\"border rounded pl-2.5 py-0.5 mr-1 mb-3\"\n                           onChange={(e)=>\n                               setSortName(e.target.value)}/>\n                    <p>Beschreibung:</p>\n                    <input className=\"border rounded pl-2.5 py-0.5 mr-1\"\n                           onChange={(e)=>\n                               setDescription(e.target.value)}/>\n                    <p><button className=\"p-2 font-bold text-xs border-accent-color-1 bg-accent-color-4 hover:bg-accent-color-5\n                    sm:rounded-lg shadow-md border mt-5\">\n                        Speichern</button></p>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default NewSort","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/price-matrix/[sort_name].tsx",["299"],[],"import React, {useEffect, useState} from \"react\";\nimport {useRouter} from \"next/router\";\nimport fromHex from \"../../components/helpers/fromHex\";\nimport API from \"axios\";\nimport moment from \"moment\";\nimport Link from \"next/link\";\n\nconst PriceMatrix = () => {\n    const [currentTime] = useState<any>(moment());\n    const [priceMatrix, setPriceMatrix] = useState<any>({\n            price_matrix: \"\",\n            indexgroup_name: \"\",\n            indeces: [],\n            prices: {\n                'Januar': {},\n                'Februar': {},\n                'März': {},\n                'April': {},\n                'Mai': {},\n                'Juni': {},\n                'Juli': {},\n                'August': {},\n                'September': {},\n                'Oktober': {},\n                'November': {},\n                'Dezember:': {}\n            },\n        }\n    );\n    const [prices, setNewPrices] = useState<any>({\n            'Januar': {},\n            'Februar': {},\n            'März': {},\n            'April': {},\n            'Mai': {},\n            'Juni': {},\n            'Juli': {},\n            'August': {},\n            'September': {},\n            'Oktober': {},\n            'November': {},\n            'Dezember:': {}\n    });\n\n    const router = useRouter()\n    const pid = router.query\n\n    useEffect(() => {\n        let apiName = 'https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices';\n\n        API.get(apiName)\n            .then((response) => {\n                setPriceMatrix({\n                    ...priceMatrix,\n                    price_matrix: response.data.Items.filter((matrix: any) =>\n                        matrix.price_matrix == fromHex(pid.sort_name))[0].price_matrix,\n                    indexgroup_name: response.data.Items.filter((matrix: any) =>\n                        matrix.price_matrix == fromHex(pid.sort_name))[0].indexgroup_name,\n                    prices: response.data.Items.filter((matrix: any) =>\n                        matrix.price_matrix == fromHex(pid.sort_name))[0].prices,\n                    indeces: response.data.Items.filter((matrix: any) =>\n                        matrix.price_matrix == fromHex(pid.sort_name))[0].indeces\n                    },\n                )\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n\n    }, []);\n\n    console.log(prices)\n    const monthsList = [\n        'Januar',\n        'Februar',\n        'März',\n        'April',\n        'Mai',\n        'Juni',\n        'Juli',\n        'August',\n        'September',\n        'Oktober',\n        'November',\n        'Dezember'\n    ]\n    const months: any = {\n        0: 'Januar',\n        1: 'Februar',\n        2: 'März',\n        3: 'April',\n        4: 'Mai',\n        5: 'Juni',\n        6: 'Juli',\n        7: 'August',\n        8: 'September',\n        9: 'Oktober',\n        10: 'November',\n        11: 'Dezember'\n    }\n\n    const responseBody = { price_matrix: \"\", indexgroup_name: \"\", indeces: [], prices: {} }\n\n    const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        responseBody.price_matrix = priceMatrix.price_matrix\n        responseBody.indexgroup_name = priceMatrix.indexgroup_name\n        responseBody.indeces = priceMatrix.indeces\n        responseBody.prices = prices\n        sendData(responseBody)\n    }\n\n    const sendData = (responseBody: any) => {\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices',\n            responseBody)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    console.log(priceMatrix)\n    return(\n        <div id=\"content-page\" className=\"px-24 h-full overflow-auto\">\n            <div className=\"h-max overflow-auto\">\n                <Link href={\"/kalkulation/\"}>\n                    <button className=\"float-right border ml-auto p-1.5 px-3.5 font-bold border-accent-color-1\n                        bg-accent-color-4 hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\">\n                        ← Zurück\n                    </button>\n                </Link>\n                <p className=\"text-lg font-bold mb-3\">\n                    Preismatrix: {priceMatrix.indexgroup_name + \" - \" + fromHex(pid.sort_name)}</p>\n                <p className=\"font-bold text-sm\">2023</p>\n                <form onSubmit={onSubmitHandler}>\n                <div className=\"mb-3 sm:rounded-lg shadow-md border overflow-auto max-h-full w-3/5 mt-3\">\n                    <table className=\"flex-row w-full table-fixed\">\n                        <thead>\n                        <tr className=\"text-xs text-gray-500 border-b text-left\">\n                            <th className=\"font-normal\">Monat</th>\n                            { priceMatrix\n                                ? priceMatrix.indeces\n                                    .sort(function (a: any, b: any){\n                                        if (a < b) {\n                                            return -1;\n                                        }\n                                        if (a > b) {\n                                            return 1;\n                                        }\n                                        return 0;\n                                    })\n                                    .map((index: any) =>\n                                    <th key={index}\n                                        className=\"font-normal text-right\">\n                                        {index}\n                                    </th>\n                                ) : \"\"}\n                        </tr>\n                        </thead>\n                        <tbody className=\"bg-gray-50\">\n                            {monthsList.map((month: any) => (\n                                <tr key={month} className=\"text-xs text-gray-500 border-b\">\n                                    <td>{month}</td>\n                                    {   priceMatrix.price_matrix != \"\" &&\n                                        months[currentTime.month()] == month\n                                            ? priceMatrix.indeces\n                                                .sort(function (a: any, b: any){\n                                                if (a < b) {\n                                                    return -1;\n                                                }\n                                                if (a > b) {\n                                                    return 1;\n                                                }\n                                                return 0;\n                                            })\n                                                .map((index: any) =>\n                                                    <td key={index}>\n                                                    <input  className=\"border rounded pl-2.5 py-0.5 w-full\"\n                                                     defaultValue={priceMatrix ? priceMatrix.prices[month][index]: \"\"}\n                                                 onChange={\n                                                     (e)=>\n                                                         setNewPrices({...prices,\n                                                             [month]: {...prices[month],\n                                                                 [index]: parseInt(e.target.value)}\n                                                         })}/>\n                                                    </td>)\n                                            : priceMatrix.indeces\n                                            .sort(function (a: any, b: any){\n                                                if (a < b) {\n                                                    return -1;\n                                                }\n                                                if (a > b) {\n                                                    return 1;\n                                                }\n                                                return 0;\n                                            })\n                                            .map((index: any) =>\n                                                <td key={index}>\n                                                    <p>{}</p>\n                                                </td>)\n                                        }\n                                </tr>\n                                ))}\n                        </tbody>\n                    </table>\n                    </div>\n                <button className=\"border p-1.5 px-3.5 font-bold border-accent-color-1 bg-accent-color-4\n                                       hover:bg-accent-color-5 rounded-lg shadow-md text-xs\"\n                        type=\"submit\">Speichern\n                </button>\n            </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PriceMatrix","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation.tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/indeces/[sort_name].tsx",[],[],"/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/indeces/edit-index/[index_name].tsx",["300"],[],"import React, {useEffect, useState} from \"react\";\nimport API from \"axios\";\nimport Link from \"next/link\";\nimport {useRouter} from \"next/router\";\nimport fromHex from \"../../../components/helpers/fromHex\";\n\n\nconst EditIndex = () => {\n    const [indexName, setIndexName] = useState<any>();\n    const [priceMatrix, setPriceMatrix] = useState<any>();\n\n    const router = useRouter()\n    const pid = router.query\n\n    useEffect(() => {\n\n        API.get('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices')\n            .then((response) => {\n                setPriceMatrix(response.data.Items.filter((matrix: any) =>\n                    matrix.price_matrix ==\n                    fromHex(pid.index_name).substring(0, fromHex(pid.index_name).search(\" -\")))[0])\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n\n    }, []);\n\n    const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        let indeces = priceMatrix.indeces\n        let position = priceMatrix.indeces.findIndex((index: any) =>\n            index == fromHex(pid.index_name).substring(fromHex(pid.index_name).search(\"- \")+2,))\n        indeces.splice(position, 1)\n        {indeces ? indeces = [...indeces, indexName] : indeces = [indexName]}\n        event.preventDefault();\n        sendData(indeces)\n    }\n\n    const sendData = (indeces: any) => {\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices',\n            {price_matrix: priceMatrix.price_matrix, indexgroup_name: priceMatrix.indexgroup_name,\n                indeces: indeces, prices: priceMatrix.prices})\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    return(\n        <div className=\"px-20\">\n            <Link href=\"/kalkulation/index-management\">\n                <button className=\"float-right border ml-auto p-1.5 px-3.5 font-bold border-accent-color-1 bg-accent-color-4\n                        hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\">← Zurück\n                </button>\n            </Link>\n            <p className=\"my-9 text-3xl font-bold\">Index bearbeiten</p>\n            <div className=\"flex\">\n                <form onSubmit={onSubmitHandler}>\n                    <input className=\"border rounded pl-2.5 py-0.5 mr-1\"\n                           defaultValue=\n                               { fromHex(pid.index_name).substring(fromHex(pid.index_name).search(\"- \")+2,)}\n                           onChange={(e)=>\n                               setIndexName(e.target.value)}/>\n                    <button className=\"p-2 font-bold text-xs border-accent-color-1 bg-accent-color-4 hover:bg-accent-color-5\n                    sm:rounded-lg shadow-md border\">\n                        Speichern</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditIndex","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/kalkulation/indeces/new-index/[sort_name].tsx",["301"],[],"import React, {useEffect, useState} from \"react\";\nimport API from \"axios\";\nimport Link from \"next/link\";\nimport {useRouter} from \"next/router\";\nimport fromHex from \"../../../components/helpers/fromHex\";\n\n\nconst NewIndex = () => {\n    const router = useRouter()\n    const pid = router.query\n\n    const [indexName, setIndexName] = useState<any>();\n    const [sort, setSort] = useState<any>(\n        {\n            sort_name: \"\", description: \"\", indexgroup_name: \"\", indeces: []}\n    );\n    const [priceMatrix, setPriceMatrix] = useState<any>();\n    const [prices, setPrices] = useState<any>(\n        {\n            'Januar': {},\n            'Februar': {},\n            'März': {},\n            'April': {},\n            'Mai': {},\n            'Juni': {},\n            'Juli': {},\n            'August': {},\n            'September': {},\n            'Oktober': {},\n            'November': {},\n            'Dezember': {}\n        }\n    );\n\n    useEffect(() => {\n        let apiName = 'https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/sorts';\n\n        API.get(apiName)\n            .then((response) => {\n                setSort(response.data.Items.filter((sort: any) => sort.sort_name == fromHex(pid.sort_name))[0])\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n        API.get('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices')\n            .then((response) => {\n                setPriceMatrix(response.data.Items.filter((matrix: any) =>\n                    matrix.price_matrix == fromHex(pid.sort_name))[0])\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n    }, []);\n    console.log(prices)\n\n    const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setPrices({\n            'Januar': {...prices, [indexName]: 0},\n            'Februar': {...prices, [indexName]: 0},\n            'März': {...prices, [indexName]: 0},\n            'April': {...prices, [indexName]: 0},\n            'Mai': {...prices, [indexName]: 0},\n            'Juni': {...prices, [indexName]: 0},\n            'Juli': {...prices, [indexName]: 0},\n            'August': {...prices, [indexName]: 0},\n            'September': {...prices, [indexName]: 0},\n            'Oktober': {...prices, [indexName]: 0},\n            'November': {...prices, [indexName]: 0},\n            'Dezember': {...prices, [indexName]: 0}\n        })\n        let indeces\n        {priceMatrix.indeces ? indeces = [...priceMatrix.indeces, indexName] : indeces = [indexName]}\n        sendData(indeces)\n    }\n\n\n    const sendData = (indeces: any) => {\n        API.put('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/price-matrices',\n            {price_matrix: sort.sort_name, indexgroup_name: sort.indexgroup_name,\n                indeces: indeces, prices: prices})\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    return(\n        <div className=\"px-20\">\n            <Link href={\"/kalkulation/\"}>\n                <button className=\"float-right border ml-auto p-1.5 px-3.5 font-bold border-accent-color-1 bg-accent-color-4\n                        hover:bg-accent-color-5 sm:rounded-lg shadow-md text-xs\">← Zurück\n                </button>\n            </Link>\n            <p className=\"mt-9 mb-2 text-3xl font-bold\">Index bearbeiten</p>\n            <div className=\"flex\">\n                <form onSubmit={onSubmitHandler}>\n                    <input className=\"border rounded pl-2.5 py-0.5 mr-1\"\n                           onChange={(e)=>\n                               setIndexName(e.target.value)\n                    }/>\n                    <button className=\"p-2 font-bold text-xs border-accent-color-1 bg-accent-color-4 hover:bg-accent-color-5\n                    sm:rounded-lg shadow-md border mt-5\">\n                        Speichern</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default NewIndex","/Users/adrianbrodzinski/Desktop/new-mcs-frontend/frontent-aws/pages/master-data/price-list/[id].tsx",["302"],[],{"ruleId":"303","severity":1,"message":"304","line":34,"column":7,"nodeType":"305","endLine":34,"endColumn":9,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":55,"column":13,"nodeType":"309","endLine":55,"endColumn":66},{"ruleId":"310","severity":1,"message":"311","line":55,"column":13,"nodeType":"309","endLine":55,"endColumn":66},{"ruleId":"307","severity":1,"message":"308","line":6,"column":20,"nodeType":"309","endLine":6,"endColumn":77},{"ruleId":"307","severity":1,"message":"308","line":15,"column":25,"nodeType":"309","endLine":15,"endColumn":103},{"ruleId":"310","severity":1,"message":"311","line":15,"column":25,"nodeType":"309","endLine":15,"endColumn":103},{"ruleId":"307","severity":1,"message":"308","line":47,"column":37,"nodeType":"309","endLine":47,"endColumn":90},{"ruleId":"310","severity":1,"message":"311","line":47,"column":37,"nodeType":"309","endLine":47,"endColumn":90},{"ruleId":"307","severity":1,"message":"308","line":92,"column":29,"nodeType":"309","endLine":96,"endColumn":28},{"ruleId":"310","severity":1,"message":"311","line":92,"column":29,"nodeType":"309","endLine":96,"endColumn":28},{"ruleId":"307","severity":1,"message":"308","line":137,"column":25,"nodeType":"309","endLine":137,"endColumn":62},{"ruleId":"310","severity":1,"message":"311","line":137,"column":25,"nodeType":"309","endLine":137,"endColumn":62},{"ruleId":"307","severity":1,"message":"308","line":151,"column":25,"nodeType":"309","endLine":151,"endColumn":55},{"ruleId":"310","severity":1,"message":"311","line":151,"column":25,"nodeType":"309","endLine":151,"endColumn":55},{"ruleId":"307","severity":1,"message":"308","line":484,"column":63,"nodeType":"309","endLine":484,"endColumn":117},{"ruleId":"310","severity":1,"message":"311","line":484,"column":63,"nodeType":"309","endLine":484,"endColumn":117},{"ruleId":"307","severity":1,"message":"308","line":487,"column":71,"nodeType":"309","endLine":487,"endColumn":125},{"ruleId":"310","severity":1,"message":"311","line":487,"column":71,"nodeType":"309","endLine":487,"endColumn":125},{"ruleId":"307","severity":1,"message":"308","line":495,"column":63,"nodeType":"309","endLine":495,"endColumn":117},{"ruleId":"310","severity":1,"message":"311","line":495,"column":63,"nodeType":"309","endLine":495,"endColumn":117},{"ruleId":"307","severity":1,"message":"308","line":498,"column":67,"nodeType":"309","endLine":498,"endColumn":114},{"ruleId":"310","severity":1,"message":"311","line":498,"column":67,"nodeType":"309","endLine":498,"endColumn":114},{"ruleId":"303","severity":1,"message":"312","line":49,"column":7,"nodeType":"305","endLine":49,"endColumn":61,"suggestions":"313"},{"ruleId":"303","severity":1,"message":"314","line":49,"column":34,"nodeType":"315","endLine":49,"endColumn":60},{"ruleId":"303","severity":1,"message":"316","line":76,"column":8,"nodeType":"305","endLine":76,"endColumn":20,"suggestions":"317"},{"ruleId":"303","severity":1,"message":"318","line":61,"column":7,"nodeType":"305","endLine":61,"endColumn":33,"suggestions":"319"},{"ruleId":"303","severity":1,"message":"320","line":159,"column":8,"nodeType":"305","endLine":159,"endColumn":21,"suggestions":"321"},{"ruleId":"307","severity":1,"message":"308","line":107,"column":33,"nodeType":"309","endLine":107,"endColumn":85},{"ruleId":"310","severity":1,"message":"311","line":107,"column":33,"nodeType":"309","endLine":107,"endColumn":85},{"ruleId":"303","severity":1,"message":"322","line":35,"column":8,"nodeType":"305","endLine":35,"endColumn":13,"suggestions":"323"},{"ruleId":"303","severity":1,"message":"324","line":92,"column":30,"nodeType":"325","endLine":92,"endColumn":52},{"ruleId":"303","severity":1,"message":"326","line":41,"column":8,"nodeType":"305","endLine":41,"endColumn":33,"suggestions":"327"},{"ruleId":"303","severity":1,"message":"314","line":41,"column":14,"nodeType":"315","endLine":41,"endColumn":32},{"ruleId":"307","severity":1,"message":"308","line":242,"column":41,"nodeType":"309","endLine":242,"endColumn":95},{"ruleId":"310","severity":1,"message":"311","line":242,"column":41,"nodeType":"309","endLine":242,"endColumn":95},{"ruleId":"303","severity":1,"message":"328","line":29,"column":8,"nodeType":"305","endLine":29,"endColumn":10,"suggestions":"329"},{"ruleId":"303","severity":1,"message":"330","line":16,"column":5,"nodeType":"331","endLine":16,"endColumn":14,"suggestions":"332"},{"ruleId":"303","severity":1,"message":"333","line":71,"column":8,"nodeType":"305","endLine":71,"endColumn":10,"suggestions":"334"},{"ruleId":"303","severity":1,"message":"335","line":28,"column":8,"nodeType":"305","endLine":28,"endColumn":10,"suggestions":"336"},{"ruleId":"303","severity":1,"message":"328","line":55,"column":8,"nodeType":"305","endLine":55,"endColumn":10,"suggestions":"337"},{"ruleId":"303","severity":1,"message":"338","line":48,"column":8,"nodeType":"305","endLine":48,"endColumn":16,"suggestions":"339"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.land_id' and 'pid.client_id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLand' needs the current value of 'data.land_id'.","ArrayExpression",["340"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'machinesData' and 'pid.id'. Either include them or remove the dependency array.",["341"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has missing dependencies: 'indeces', 'pid.id', and 'priceMatrices'. Either include them or remove the dependency array.",["342"],"React Hook useEffect has a missing dependency: 'shifts'. Either include it or remove the dependency array.",["343"],"React Hook useEffect has missing dependencies: 'calculateTotalDelta', 'calculateTotalIncome', 'calculateTotalValue', and 'calculateTotalWeight'. Either include them or remove the dependency array.",["344"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["345"],"Assignments to the 'SHIFT_CALENDAR' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'data.land_id' and 'lands'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLandName' needs the current value of 'lands'.",["346"],"React Hook useEffect has a missing dependency: 'pid.sort_name'. Either include it or remove the dependency array.",["347"],"React Hook useEffect contains a call to 'setIndexgroupName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [pid.indexgroup_name] as a second argument to the useEffect Hook.","Identifier",["348"],"React Hook useEffect has missing dependencies: 'pid.sort_name' and 'priceMatrix'. Either include them or remove the dependency array. You can also do a functional update 'setPriceMatrix(p => ...)' if you only need 'priceMatrix' in the 'setPriceMatrix' call.",["349"],"React Hook useEffect has a missing dependency: 'pid.index_name'. Either include it or remove the dependency array.",["350"],["351"],"React Hook useEffect has a missing dependency: 'machineData.price_list'. Either include it or remove the dependency array.",["352"],{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"367","fix":"375"},{"desc":"376","fix":"377"},"Update the dependencies array to be: [data.land_id, pid.client_id]",{"range":"378","text":"379"},"Update the dependencies array to be: [startDate, endDate, page, machinesData, pid.id]",{"range":"380","text":"381"},"Update the dependencies array to be: [data.index, indeces, pid.id, priceMatrices]",{"range":"382","text":"383"},"Update the dependencies array to be: [clientId, numberOfShifts, shifts]",{"range":"384","text":"385"},"Update the dependencies array to be: [calculateTotalDelta, calculateTotalIncome, calculateTotalValue, calculateTotalWeight, currentYear]",{"range":"386","text":"387"},"Update the dependencies array to be: [data, pid]",{"range":"388","text":"389"},"Update the dependencies array to be: [data.land_id, lands, pid]",{"range":"390","text":"391"},"Update the dependencies array to be: [pid.sort_name]",{"range":"392","text":"393"},"Add dependencies array: [pid.indexgroup_name]",{"range":"394","text":"395"},"Update the dependencies array to be: [pid.sort_name, priceMatrix]",{"range":"396","text":"397"},"Update the dependencies array to be: [pid.index_name]",{"range":"398","text":"399"},{"range":"400","text":"393"},"Update the dependencies array to be: [machineData.price_list, pid.id]",{"range":"401","text":"402"},[1191,1193],"[data.land_id, pid.client_id]",[1755,1809],"[startDate, endDate, page, machinesData, pid.id]",[2679,2691],"[data.index, indeces, pid.id, priceMatrices]",[1910,1936],"[clientId, numberOfShifts, shifts]",[3817,3830],"[calculateTotalDelta, calculateTotalIncome, calculateTotalValue, calculateTotalWeight, currentYear]",[1515,1520],"[data, pid]",[1606,1631],"[data.land_id, lands, pid]",[868,870],"[pid.sort_name]",[548,548],", [pid.indexgroup_name]",[2354,2356],"[pid.sort_name, priceMatrix]",[891,893],"[pid.index_name]",[1708,1710],[1589,1597],"[machineData.price_list, pid.id]"]