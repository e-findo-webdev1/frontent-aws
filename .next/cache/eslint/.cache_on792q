[{"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/_app.tsx":"1","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/api/hello.ts":"2","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/clients/[client_id].tsx":"3","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/helpers/getFillerStyle.tsx":"4","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/login/LoginForm.tsx":"5","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/Breadcrumbs.tsx":"6","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/Logo.tsx":"7","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/Navigation.tsx":"8","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/NavigationButtons.tsx":"9","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/NavigationLinks.tsx":"10","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/Header.tsx":"11","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/MachinesTable.tsx":"12","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/Popup.tsx":"13","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/Statistics.tsx":"14","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/StorageSystem.tsx":"15","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/StorageSystemDashboard.tsx":"16","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/Summary.tsx":"17","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/impressum.tsx":"18","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/index.tsx":"19","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/machines/[id].tsx":"20","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data/shift-calendar.tsx":"21","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data/shift-manager.tsx":"22","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data.tsx":"23","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting/annual-evaluation.tsx":"24","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting/annual-revenues.tsx":"25","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting/co2-evaluation.tsx":"26","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting/control-documents.tsx":"27","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting.tsx":"28","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/storage-systems.tsx":"29","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data/edit-machine/[id].tsx":"30","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data/new-machine.tsx":"31"},{"size":1422,"mtime":1667390711873,"results":"32","hashOfConfig":"33"},{"size":307,"mtime":1665043950563,"results":"34","hashOfConfig":"33"},{"size":4364,"mtime":1669628012066,"results":"35","hashOfConfig":"33"},{"size":640,"mtime":1665741430970,"results":"36","hashOfConfig":"33"},{"size":3128,"mtime":1666332888351,"results":"37","hashOfConfig":"33"},{"size":2835,"mtime":1670437148226,"results":"38","hashOfConfig":"33"},{"size":286,"mtime":1666332956001,"results":"39","hashOfConfig":"33"},{"size":409,"mtime":1666333525365,"results":"40","hashOfConfig":"33"},{"size":454,"mtime":1669023649398,"results":"41","hashOfConfig":"33"},{"size":1628,"mtime":1669023594216,"results":"42","hashOfConfig":"33"},{"size":344,"mtime":1674636210170,"results":"43","hashOfConfig":"33"},{"size":3251,"mtime":1669037389038,"results":"44","hashOfConfig":"33"},{"size":3310,"mtime":1665664449000,"results":"45","hashOfConfig":"33"},{"size":1288,"mtime":1665485530032,"results":"46","hashOfConfig":"33"},{"size":1727,"mtime":1666011733399,"results":"47","hashOfConfig":"33"},{"size":13463,"mtime":1674636031492,"results":"48","hashOfConfig":"33"},{"size":611,"mtime":1665485408947,"results":"49","hashOfConfig":"33"},{"size":2068,"mtime":1667391605316,"results":"50","hashOfConfig":"33"},{"size":477,"mtime":1674635887957,"results":"51","hashOfConfig":"33"},{"size":10632,"mtime":1674661057441,"results":"52","hashOfConfig":"33"},{"size":95784,"mtime":1671110371136,"results":"53","hashOfConfig":"33"},{"size":8562,"mtime":1670946639711,"results":"54","hashOfConfig":"33"},{"size":31228,"mtime":1674039285869,"results":"55","hashOfConfig":"33"},{"size":12685,"mtime":1666338890426,"results":"56","hashOfConfig":"33"},{"size":6765,"mtime":1667377820665,"results":"57","hashOfConfig":"33"},{"size":2547,"mtime":1667379962006,"results":"58","hashOfConfig":"33"},{"size":4950,"mtime":1667377877134,"results":"59","hashOfConfig":"33"},{"size":2346,"mtime":1667377085059,"results":"60","hashOfConfig":"33"},{"size":7042,"mtime":1670430625581,"results":"61","hashOfConfig":"33"},{"size":17729,"mtime":1672662010912,"results":"62","hashOfConfig":"33"},{"size":17547,"mtime":1672661101648,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x6ih74",{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/_app.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/api/hello.ts",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/clients/[client_id].tsx",["167"],[],"import {useEffect, useState} from \"react\";\nimport API from \"axios\";\nimport {useRouter} from \"next/router\";\n\nconst ClientPage = () => {\n    const [data, setData] = useState<any>([]);\n    const [land, setLand] = useState<any>([]);\n    const router = useRouter()\n    const pid = router.query\n\n    useEffect(() => {\n        let apiName = 'https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/clients';\n\n        API.get(apiName)\n            .then((response) => {\n                setData(response.data.Items\n                    .filter((client: { client_number: number; }) =>\n                        client.client_number == parseInt(pid.client_id as string))[0]\n                )\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n\n        API.get('https://8v9jqts989.execute-api.eu-central-1.amazonaws.com/lands')\n            .then((response) => {\n                setLand(response.data.Items\n                    .filter((land: { land_id: number; }) =>\n                        land.land_id == data.land_id)[0].land_name)\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n    },[]);\n\n    if (data) {\n        return(\n            <div id=\"content-page\" className=\"mx-10 p-10 overflow-auto h-full\">\n                <p className=\"mb-9 text-3xl font-bold\">Stammdaten</p>\n                <div className=\"mb-9 text-sm\">\n                    <table>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">KundenNr.:</td>\n                            <td className=\"p-0 pb-1.5 \">{data.client_number}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Firma:</td>\n                            <td className=\"p-0 pb-1.5 \">{data.client_name}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">PLZ:</td>\n                            <td className=\"p-0 pb-1.5\">{data.zip_code}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Stadt:</td>\n                            <td className=\"p-0 pb-1.5\">{data.city}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Straße:</td>\n                            <td className=\"p-0 pb-1.5\">{data.street}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0 pr-10\">Bundesland (D):</td>\n                            <td className=\"p-0 pb-1.5\">{land}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Telefon:</td>\n                            <td className=\"p-0 pb-1.5\">{data.telefon}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">E-Mail:</td>\n                            <td className=\"p-0 pb-1.5\">{data.email}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"font-bold pl-0 pb-1.5 pt-0\">Ansprechpartner:</td>\n                            <td className=\"p-0 pb-1.5\">{data.contact}</td>\n                        </tr>\n                    </table>\n                </div>\n                <span className=\"text-xs uppercase font-bold text-gray-500\">\n                  Lagersysteme\n                </span>\n                <div className=\"sm:rounded-lg shadow-md border h-72 overflow-auto\">\n                    <table className=\"flex-row w-full table-auto\">\n                        <thead>\n                        <tr className=\"text-xs text-gray-500 border-b text-left\">\n                            <th className=\"font-normal\">Masch.-ID<br/>Max Netto</th>\n                            <th className=\"font-normal\">Material</th>\n                            <th className=\"font-normal\">Füllgrad</th>\n                            <th className=\"font-normal\">Netto (kg)</th>\n                        </tr>\n                        </thead>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ClientPage","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/helpers/getFillerStyle.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/login/LoginForm.tsx",["168","169"],[],"import {useState} from \"react\";\n\nconst credentials =\n    {\n        username: \"user1@e-findo.de\",\n        password: \"pass1\"\n    }\n\nconst LoginForm = ({setIsSubmitted}: any) => {\n    const [error, setError] = useState(0);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault();\n        if (email == credentials.username && password == credentials.password)\n        {\n            setIsSubmitted(true)\n        }\n        else {\n            setError(1)\n        }\n    };\n\n    return(\n        <div id=\"content-page\" className=\"mx-10 p-10\">\n            <img className=\"mb-7 m-auto h-40\" src=\"/logo-1.svg\"/>\n            <div className=\"flex flex-col items-center justify-center px-6 py-8 lg:py-0\">\n                <div\n                    className=\"w-full rounded-lg shadow md:mt-0 sm:max-w-md xl:p-0\">\n                    <div className=\"p-6 space-y-3 sm:p-8\">\n                        <h1 className=\"font-bold text-lg\">Sign in to your account</h1>\n                        <p className=\"text-red-500 text-md\">\n                            {error === 1\n                            ? \"Invalid username or password.\"\n                            : \"\"}\n                        </p>\n                        <form className=\"space-y-4 md:space-y-6\" action=\"#\" onSubmit={handleSubmit}>\n                            <div>\n                                <label htmlFor=\"email\" className=\"block mb-2 text-sm font-medium\n                            text-gray-900 dark:text-white\">\n                                    Your email</label>\n                                <input type=\"email\" name=\"email\" id=\"email\" className=\"bg-gray-50 border\n                             border-gray-300 text-gray-900 sm:text-sm rounded-lg w-full p-2.5\"\n                                       placeholder=\"name@company.com\" required\n                                       onChange={(e) => setEmail(e.target.value)}/>\n                            </div>\n                            <div>\n                                <label htmlFor=\"password\"\n                                       className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\n                                    Password</label>\n                                <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"••••••••\"\n                                       className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg\n                                   w-full p-2.5 mb-2\" required\n                                       onChange={(e) => setPassword(e.target.value)}/>\n                            </div>\n                            <button type=\"submit\" className=\"w-full text-white border font-medium rounded-lg\n                                text-sm px-5 py-2.5 text-center bg-accent-color-2 hover:bg-accent-color-3\">\n                                Sign in</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/Breadcrumbs.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/Logo.tsx",["170"],[],"import Link from \"next/link\";\nconst Logo = () => {\n    return (\n        <div id=\"logo\" className=\"mx-5 my-auto\" >\n            <Link href=\"/\">\n                <a><img className=\"ml-5 h-10\" src=\"/logo-1.png\" alt=\"logo\"/></a>\n            </Link>\n        </div>\n    )\n}\n\nexport default Logo","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/Navigation.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/NavigationButtons.tsx",["171","172"],[],"const NavigationButtons = ({setIsSubmitted}: any) => {\n    return(\n        <div id=\"navigation-buttons\" className=\"flex ml-auto space-x-2 mr-10\">\n            <button className=\"flex\" onClick={()=>{setIsSubmitted(false)}}>\n                <img className=\"m-auto mr-1.5 \" src=\"/power-on-svgrepo-com 1.svg\" width=\"15\"/>\n                <span className=\"text-xs m-auto mr-10\">Ausloggen</span></button>\n        </div>\n    )\n}\n\nexport default NavigationButtons","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/navigation/NavigationLinks.tsx",["173","174"],[],"import { useRouter } from 'next/router'\n\nimport Link from \"next/link\";\n\nconst navigationLinks = [\n    {\n        name: \"Start\",\n        link: \"/\",\n        image: \"/home-svgrepo-com.svg\"\n    },\n    {\n        name: \"Stammdaten\",\n        link: \"/master-data\",\n        image: \"\"\n    },\n    //{\n    //    name: \"Lagersysteme\",\n    //    link: \"/storage-systems\",\n    //    image: \"\"\n    //},\n    {\n        name: \"Reporting\",\n        link: \"/reporting\",\n        image: \"\"\n    },\n    {\n        name: \"Kalkulation\",\n        link: \"/calculation\",\n        image: \"\"\n    },\n    {\n        name: \"News\",\n        link: \"/news\",\n        image: \"\"\n    },\n    {\n        name: \"Impressum\",\n        link: \"/impressum\",\n        image: \"\"\n    }\n]\n\nconst NavigationLinks = () => {\n    const router = useRouter()\n        return (\n            <div id=\"links\" className=\"ml-10 text-xs flex\">\n                {navigationLinks.map((link) =>\n                    <div className=\"flex m-auto\" key={link.name} id={link.name}>\n                        <Link key={link.name} href={link.link}>\n                            <a className=\"\">\n                                <div className=\"flex px-3 py-1\">\n                                    <img className=\"mr-1.5 mb-1.5 h-4\" src={link.image}/>\n                                    <span className=\"m-auto\">\n                                        {link.name}\n                                    </span>\n                                </div>\n                            </a>\n                        </Link>\n                    </div>\n                )}\n            </div>\n        )\n}\n\nexport default NavigationLinks","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/Header.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/MachinesTable.tsx",["175","176"],[],"import getFillerStyle from \"../helpers/getFillerStyle\";\nimport Link from \"next/link\";\n\nconst machineList = [\n    {\n        type: \"esb\",\n        id: \"4712\",\n        max_netto: 26500,\n        material: \"Eisenspäne, gebrochen ESB, gebrochen\",\n        load: 79,\n        plan_date: \"17.10.2022 02:31\",\n        pickup_date: \"1/1/2022 01:00\",\n        netto: 5880\n    },\n    {\n        type: \"bw\",\n        id: \"9001 CMS-A\",\n        max_netto: 9000,\n        material: \"Eisenspäne, normal\",\n        load: 31,\n        plan_date: \"21/12/2022 02:26\",\n        pickup_date: \"4/4/2022 01:00\",\n        netto: 2760\n    },\n    {\n        type: \"bw\",\n        id: \"9002 CMS-A\",\n        max_netto: 9000,\n        material: \"Eisenspäne, normal\",\n        load: 22,\n        plan_date: \"noch keine Füllung\",\n        pickup_date: \"-\",\n        netto: 1960\n    },\n    {\n        type: \"esb\",\n        id: \"4711\",\n        max_netto: 26500,\n        material: \"Eisenspäne, gebrochen ESB, gebrochen\",\n        load: 0,\n        plan_date: \"nicht ermittelbar\",\n        pickup_date: \"-\",\n        netto: 120\n    },\n    {\n        type: \"esb\",\n        id: \"4711\",\n        max_netto: 26500,\n        material: \"Eisenspäne, gebrochen ESB, gebrochen\",\n        load: 0,\n        plan_date: \"nicht ermittelbar\",\n        pickup_date: \"-\",\n        netto: 120\n    },\n    {\n        type: \"esb\",\n        id: \"4711\",\n        max_netto: 26500,\n        material: \"Eisenspäne, gebrochen ESB, gebrochen\",\n        load: 0,\n        plan_date: \"nicht ermittelbar\",\n        pickup_date: \"-\",\n        netto: 120\n    },\n]\n\nconst MachinesTable = ({setMachineID, setPickupDate}: any) => {\n    return(\n        <tbody className=\"bg-gray-50\">\n        {machineList.map((machine) =>\n            <tr key={machine.id} className=\"text-xs border-t\">\n                <td>\n                    {machine.type}: <span className=\"underline\">\n                        <Link href={\"/machines/\" + machine.id}>\n                            {machine.id}\n                        </Link></span><br/>\n                    <span>{machine.max_netto}</span></td>\n                <td>{machine.material}</td>\n                <td className=\"flex\">\n                    <div className=\"border border-black bg-white w-32 mr-1.5\">\n                        <div className={getFillerStyle(machine.load)}/>\n                    </div>\n                    {machine.load}%</td>\n                <td>{machine.plan_date}<br/>\n                    <span id={\"pickup_date_\" + machine.id}\n                        className={machine.pickup_date != \"-\"\n                                    ? \"flex underline\"\n                                    : \"flex\"}>\n                        {machine.pickup_date}\n                        <button onClick={() => {setMachineID(machine.id);\n                        setPickupDate(new Date(machine.pickup_date))}}>\n                            <img\n                            src={machine.pickup_date != \"-\"\n                            ? \"/icon_fragezeichen 1.svg\"\n                            : \"\"\n                        }/>\n                        </button>\n                    </span>\n                </td>\n                <td>{machine.netto}</td>\n            </tr>\n        )}\n        </tbody>\n    )\n}\n\nexport default MachinesTable","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/Popup.tsx",["177","178","179","180"],[],"import DatePicker from \"react-datepicker\";\n\nconst Popup = ({machineID, pickupDate, setMachineID, setPickupDate}: any) => {\n    const checkDay = () => {\n        const days =\n            {\n                0: \"Montag\",\n                1: \"Dienstag\",\n                2: \"Mittwoch\",\n                3: \"Donnerstag\",\n                4: \"Freitag\",\n                5: \"Samstag\",\n                6: \"Sonntag\"\n            }\n            if (pickupDate) {\n                const day = pickupDate.getDay()\n            // @ts-ignore\n            return days[day]\n            }\n    }\n    const savePickupDate = () => {\n        setPickupDate(pickupDate)\n    }\n    return(\n        <div id=\"popup\"\n             className={ machineID != \"\"\n                 ? \"text-sm bg-white w-1/3 sm:rounded-lg shadow-md border p-5 space-y-4 \" +\n                 \"fixed -mt-48 left-0 right-0 m-auto\"\n                 : \"hidden\" }>\n            <p>Abholdatum bearbeiten (Masch.-ID: {machineID})</p>\n            <div className=\"flex\">\n                <div className=\"flex space-x-1\">\n                    <p className=\"m-auto\">Abholdatum:</p>\n                    <DatePicker className=\"shadow-md border text-center p-0.5\" selected={pickupDate}\n                                showTimeSelect dateFormat=\"Pp\"\n                                onChange={(date:Date) => setPickupDate(date)}/>\n                    <div className=\"m-auto\">({checkDay()})</div>\n                </div>\n            </div>\n            <div className=\"flex space-x-3\">\n                <div className=\"flex items-center\">\n                    <input id=\"radio-1\" type=\"radio\" value=\"\" name=\"default-radio\" defaultChecked\n                           className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500\n                               dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700\n                               dark:border-gray-600\"/>\n                    <label htmlFor=\"radio-1\"\n                           className=\"flex ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n                        <img src=\"/icon_fragezeichen 1.svg\"/>Angefragt</label>\n                </div>\n                <div className=\"flex items-center\">\n                    <input id=\"radio-2\" type=\"radio\" value=\"\" name=\"default-radio\"\n                           className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500\n                               dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700\n                               dark:border-gray-600\"/>\n                    <label htmlFor=\"radio-2\"\n                           className=\"flex ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n                        <img src=\"/icon_haken 1.svg\"/>Bestätigt</label>\n                </div>\n            </div>\n            <div id=\"popup-buttons\" className=\"space-x-5\">\n                <button className=\"sm:rounded-lg shadow-md border p-1\"\n                        onClick={() => {savePickupDate()}}>\n                    Speichern</button>\n                <button className=\"sm:rounded-lg shadow-md border p-1\"\n                        onClick={() => {setMachineID(\"\")}}>\n                    Abbrechen</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/Statistics.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/StorageSystem.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/StorageSystemDashboard.tsx",["181"],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/components/start/Summary.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/impressum.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/index.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/machines/[id].tsx",["182"],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data/shift-calendar.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data/shift-manager.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data.tsx",["183"],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting/annual-evaluation.tsx",["184"],[],"import {useEffect, useState} from \"react\";\nimport Chart from 'chart.js/auto';\n\nconst dataYear2022 = [\n    {\n        month: \"Januar\",\n        weight: 384840,\n        value: 116798.95,\n        income: 116798.95,\n        delta: 0\n    },\n    {\n        month: \"Februar\",\n        weight: 323660,\n        value: 103538.83,\n        income: 103538.83,\n        delta: 0\n    },\n    {\n        month: \"März\",\n        weight: 377220,\n        value: 145380.59,\n        income: 145380.59,\n        delta: 0\n    },\n    {\n        month: \"April\",\n        weight: 377220,\n        value: 145380.59,\n        income: 145380.59,\n        delta: 0\n    },\n    {\n        month: \"Mai\",\n        weight: 353560,\n        value: 121306.45,\n        income: 121306.45,\n        delta: 0\n    },\n    {\n        month: \"Juni\",\n        weight: 360520,\n        value: 91896.56,\n        income: 91896.56,\n        delta: 0\n    },\n    {\n        month: \"Juli\",\n        weight: 348930,\n        value: 72682.11,\n        income: 72682.11,\n        delta: 0\n    },\n    {\n        month: \"August\",\n        weight: 370400,\n        value: 79228.57,\n        income: 79228.57,\n        delta: 0\n    },\n    {\n        month: \"September\",\n        weight: 326190,\n        value: 73816.80,\n        income: 73816.80,\n        delta: 0\n    },\n    {\n        month: \"Oktober\",\n        weight: 0,\n        value: 0,\n        income: 0,\n        delta: 0\n    },\n    {\n        month: \"November\",\n        weight: 0,\n        value: 0,\n        income: 0,\n        delta: 0\n    },\n    {\n        month: \"Dezember\",\n        weight: 0,\n        value: 0,\n        income: 0,\n        delta: 0\n    }\n]\nconst dataYear2021 = [\n    {\n        month: \"Januar\",\n        weight: 18050,\n        value: 17787.88,\n        income: 17618.68,\n        delta: -169.20\n    },\n    {\n        month: \"Februar\",\n        weight: 18350,\n        value: 16350.75,\n        income: 16350.75,\n        delta: 0\n    },\n    {\n        month: \"März\",\n        weight: 22140,\n        value: 22984.53,\n        income: 22920.63,\n        delta: 0\n    },\n    {\n        month: \"April\",\n        weight: 20650,\n        value: 23709.27,\n        income: 23709.27,\n        delta: 0\n    },\n    {\n        month: \"Mai\",\n        weight: 16600,\n        value: 20713.02,\n        income: 20713.02,\n        delta: 0\n    },\n    {\n        month: \"Juni\",\n        weight: 20170,\n        value: 27265.76,\n        income: 27265.76,\n        delta: 0\n    },\n    {\n        month: \"Juli\",\n        weight: 19240,\n        value: 24094.16,\n        income: 24094.16,\n        delta: 0\n    },\n    {\n        month: \"August\",\n        weight: 11660,\n        value: 15660.60,\n        income: 15620.40,\n        delta: -40.20\n    },\n    {\n        month: \"September\",\n        weight: 16170,\n        value: 23229.67,\n        income: 23173.87,\n        delta: -55.80\n    },\n    {\n        month: \"Oktober\",\n        weight: 19670,\n        value: 28384.60,\n        income: 28299.60,\n        delta: -85.00\n    },\n    {\n        month: \"November\",\n        weight: 19060,\n        value: 26784.52,\n        income: 26614.52,\n        delta: -170\n    },\n    {\n        month: \"Dezember\",\n        weight: 11760,\n        value: 17030.21,\n        income: 17030.21,\n        delta: 0\n    }\n]\nconst dataYear2020 = [\n    {\n        month: \"Januar\",\n        weight: 23760,\n        value: 22528.90,\n        income: 22528.90,\n        delta: 0\n    },\n    {\n        month: \"Februar\",\n        weight: 19670,\n        value: 20394.86,\n        income: 17870.25,\n        delta: -2524.61\n    },\n    {\n        month: \"März\",\n        weight: 23820,\n        value: 21134.32,\n        income: 21027.22,\n        delta: -107.10\n    },\n    {\n        month: \"April\",\n        weight: 9360,\n        value: 6446.56,\n        income: 6446.5,\n        delta: 0\n    },\n    {\n        month: \"Mai\",\n        weight: 8230,\n        value: 7576.77,\n        income: 7576.77,\n        delta: 0\n    },\n    {\n        month: \"Juni\",\n        weight: 18130,\n        value: 14436.99,\n        income: 14356.66,\n        delta: -80.33\n    },\n    {\n        month: \"Juli\",\n        weight: 17850,\n        value: 13368.21,\n        income: 13368.21,\n        delta: 0\n    },\n    {\n        month: \"August\",\n        weight: 19470,\n        value: 14690.88,\n        income: 14690.88,\n        delta: 0\n    },\n    {\n        month: \"September\",\n        weight: 21430,\n        value: 14098.56,\n        income: 14098.56,\n        delta: 0\n    },\n    {\n        month: \"Oktober\",\n        weight: 20920,\n        value: 18200.47,\n        income: 18283.27,\n        delta: 82.80\n    },\n    {\n        month: \"November\",\n        weight: 16680,\n        value: 14374.71,\n        income: 14374.71,\n        delta: 0\n    },\n    {\n        month: \"Dezember\",\n        weight: 14120,\n        value: 11086.87,\n        income: 11086.87,\n        delta: 0\n    }\n]\n\nconst AnnualEvaluation = () => {\n    const [dataset, setDataset] = useState(dataYear2022)\n    const [year, setYear] = useState(2022)\n\n    useEffect(()=>{\n        if (year == 2022) {\n            setDataset(dataYear2022)\n        }\n        if (year == 2021) {\n            setDataset(dataYear2021)\n        }\n        if (year == 2020) {\n            setDataset(dataYear2020)\n        }\n\n        const labels = [\n            'Jan',\n            'Feb',\n            'Mrz',\n            'Apr',\n            'Mai',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Okt',\n            'Nov',\n            'Dez'\n        ];\n\n        const data = {\n            labels: labels,\n            datasets: [{\n                label: 'Gesamt-Werksgewicht',\n                backgroundColor: 'rgb(218,0,44)',\n                borderColor: 'rgb(218,0,44)',\n                data: dataset.filter(month => month.weight != 0).map(month=>month.weight),\n            }]\n        };\n\n        const config = {\n            type: 'line',\n            data: data,\n            options: {\n                scales: {\n                    y: {\n                        suggestedMin: 0,\n                    }\n                },\n                plugins: {\n                    legend: {\n                        position: 'right'\n                    }\n                },\n            },\n        };\n\n        // @ts-ignore\n        document.getElementById(\"line-chart\").innerHTML =\n            \"<canvas id=\\\"myChart\\\"></canvas>\"\n\n        const myChart = new Chart(\n            // @ts-ignore\n            document.getElementById('myChart'),\n            config\n        );\n    },)\n\n    return(\n        <div id=\"content-page\" className=\"overflow-auto h-full px-20\">\n            <p className=\"mt-9 text-3xl font-bold mb-5\">Jahresauswertung</p>\n            <div className=\"flex space-x-2 text-sm\">\n                <span>Maschine:</span>\n                <select className=\"w-40 text-blue-500 border\" name=\"machines\" id=\"machines\">\n                    <option selected>- Alle -</option>\n                    <option value=\"4711\">4711</option>\n                    <option value=\"4712\">4712</option>\n                    <option value=\"9001\">9001</option>\n                    <option value=\"9002\">9002</option>\n                </select>\n            </div>\n            <div className=\"font-bold justify-center flex space-x-10 my-5\">\n                <button\n                    className={\n                        year == 2020\n                            ? \"text-gray-300 pointer-events-none\"\n                            : \"\"\n                    }\n                    onClick={\n                        year > 2020\n                            ? ()=>{setYear(year-1)}\n                            : ()=>{}\n                    }\n                >&lt;</button>\n                <span>{year}</span>\n                <button\n                    className={\n                        year == 2022\n                            ? \"text-gray-300 pointer-events-none\"\n                            : \"\"\n                    }\n                    onClick={\n                        year < 2022\n                            ? ()=>{setYear(year+1)}\n                            : ()=>{}\n                    }\n                >&gt;</button>\n            </div>\n            <span className=\"text-xs uppercase font-bold text-gray-500\">Gewichtentwicklung</span>\n            <div className=\"mb-10 mt-5\" id=\"line-chart\"/>\n            <div className=\"sm:rounded-lg shadow-md border\">\n                <table className=\"flex-row w-full table-auto\">\n                    <thead>\n                    <tr className=\"text-xs text-gray-500 border-b text-left\">\n                        <th className=\"font-normal\">Monat</th>\n                        <th className=\"font-normal text-right\">Werksgewicht</th>\n                        <th className=\"font-normal text-right\">Betrag Werksgewicht\t</th>\n                        <th className=\"font-normal text-right\">Betrag erhalten</th>\n                        <th className=\"font-normal text-right\">Delta</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"bg-gray-50\">\n                    {   year == 2022\n                        ? dataYear2022.map((month) =>\n                        <tr key={month.month} className=\"text-xs border-t\">\n                            <td>{month.month} {year}</td>\n                            <td className=\"text-right\">{month.weight}</td>\n                            <td className=\"text-right\">{month.value} €</td>\n                            <td className=\"text-right\">{month.income} €</td>\n                            <td className=\"text-right\">{month.delta} €</td>\n                        </tr>\n                        )\n                        : year == 2021\n                            ? dataYear2021.map((month) =>\n                                <tr key={month.month} className=\"text-xs border-t\">\n                                    <td>{month.month} {year}</td>\n                                    <td className=\"text-right\">{month.weight}</td>\n                                    <td className=\"text-right\">{month.value} €</td>\n                                    <td className=\"text-right\">{month.income} €</td>\n                                    <td className=\"text-right\">{month.delta} €</td>\n                                </tr>\n                            )\n                            : year == 2020\n                        ? dataYear2020.map((month) =>\n                                    <tr key={month.month} className=\"text-xs border-t\">\n                                        <td>{month.month} {year}</td>\n                                        <td className=\"text-right\">{month.weight}</td>\n                                        <td className=\"text-right\">{month.value} €</td>\n                                        <td className=\"text-right\">{month.income} €</td>\n                                        <td className=\"text-right\">{month.delta} €</td>\n                                    </tr> )\n                                : <div/>\n                    }\n                    <tr>\n                        <td colSpan={5}>\n                            <hr/>\n                        </td>\n                    </tr>\n                    { year == 2022\n                        ? <tr className=\"text-xs\">\n                            <td/>\n                            <td className=\"text-right\">3310060</td>\n                            <td className=\"text-right\">938366.63 €</td>\n                            <td className=\"text-right\">938366.63 €</td>\n                            <td className=\"text-right\">0 €</td>\n                        </tr>\n                        : year == 2021\n                        ?   <tr className=\"text-xs\">\n                                <td/>\n                                <td className=\"text-right\">213520</td>\n                                <td className=\"text-right\">263994.97 €</td>\n                                <td className=\"text-right\">263410.87 €</td>\n                                <td className=\"text-right\">-584.10 €</td>\n                        </tr>\n                            : year == 2020\n                        ?   <tr className=\"text-xs\">\n                                    <td/>\n                                    <td className=\"text-right\">213440</td>\n                                    <td className=\"text-right\">178338.10 €</td>\n                                    <td className=\"text-right\">175708.86 €</td>\n                                    <td className=\"text-right\">-2629.24 €</td>\n                                </tr>\n                                : <div/>\n\n                    }\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AnnualEvaluation","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting/annual-revenues.tsx",["185"],[],"import {useEffect, useState} from \"react\";\n\nconst revenues_2020 = [\n    {\n        product: \"Aluminium Späne, normal\",\n        weight: 46480,\n        value: 60024.07,\n        income: 60024.07,\n        delta: 0.00\n    },\n    {\n        product: \"Aluminium Späne, nass\",\n        weight: 6860,\n        value: 8807.58,\n        income: 7310.29,\n        delta: -1497.29\n    },\n    {\n        product: \"Aluminium Profile AlSi1, Fe frei\",\n        weight: 50540,\n        value: 75635.31,\n        income: 75635.31,\n        delta: 0.00\n    },\n    {\n        product: \"Mischschrott mit Eisenanhaftung, Alu Anteil ca. 70 %\",\n        weight: 13780,\n        value: 2388.75,\n        income: 2370.67,\n        delta: -18.08\n    }\n]\nconst revenues_2021 = [\n    {\n        product: \"Eisenspäne\",\n        weight: 1060,\n        value: 275.28,\n        income: 275.28,\n        delta: 0.00\n    },\n    {\n        product: \"Aluminium Späne, normal\",\n        weight: 112990,\n        value: 149397.55,\n        income: 149397.55,\n        delta: 0.00\n    },\n    {\n        product: \"Aluminium Späne, nass\",\n        weight: 10030,\n        value: 6132.90,\n        income: 6132.90,\n        delta: 0.00\n    },\n    {\n        product: \"Aluminium Profile AlSi1, Fe frei\",\n        weight: 57990,\n        value: 99753.66,\n        income: 99753.66,\n        delta: 0.00\n    },\n    {\n        product: \"Mischschrott mit Eisenanhaftung, Alu Anteil ca. 70 %\",\n        weight: 31450,\n        value: 8435.58,\n        income: 7851.48,\n        delta: -584.10\n    }\n]\nconst revenues_2022 = [\n    {\n        product: \"Mischschrott\",\n        weight: 17170,\n        value: 4931.18,\n        income: 4931.18,\n        delta: 0\n    },\n    {\n        product: \"Eisenspäne\",\n        weight: 18510,\n        value: 4788.59,\n        income: 4762.91,\n        delta: -25.68\n    },\n    {\n        product: \"Aluminium Späne, normal\",\n        weight: 80250,\n        value: 142491.14,\n        income: 142028.53,\n        delta: -462.61\n    },\n    {\n        product: \"Aluminium Späne, nass\",\n        weight: 9770,\n        value: 6909.20,\n        income: 6909.20,\n        delta: 0\n    },\n    {\n        product: \"Aluminium Profile AlSi1, Fe frei\",\n        weight: 47790,\n        value: 100481.65,\n        income: 100647.85,\n        delta: 166.20\n    },\n]\n\nconst AnnualRevenues = () => {\n    const [currentYearString, setCurrentYearString] = useState(\"2020\")\n    const [currentYear, setCurrentYear] = useState(revenues_2020)\n    const [totalWeight, setTotalWeight] = useState( 0);\n    const [totalValue, setTotalValue] = useState( 0);\n    const [totalIncome, setTotalIncome] = useState( 0);\n    const [totalDelta, setTotalDelta] = useState( 0);\n\n    const calculateTotalWeight = ()  => {\n        let weight = 0\n\n            for (let product in currentYear) {\n                weight = (weight + currentYear[product].weight)\n            }\n        return weight;\n    }\n    const calculateTotalValue = ()  => {\n        let value = 0\n\n        for (let product in currentYear) {\n            value = (value + currentYear[product].value)\n        }\n        return value;\n    }\n    const calculateTotalIncome = ()  => {\n        let income = 0\n\n        for (let product in currentYear) {\n            income = (income + currentYear[product].income)\n        }\n        return income;\n    }\n    const calculateTotalDelta = ()  => {\n        let delta = 0\n\n        for (let product in currentYear) {\n            delta = (delta + currentYear[product].delta)\n        }\n        return delta;\n    }\n\n    useEffect(() => {\n        let weight = calculateTotalWeight()\n        setTotalWeight(weight)\n        let income = calculateTotalIncome()\n        setTotalIncome(income)\n        let value = calculateTotalValue()\n        setTotalValue(value)\n        let delta = calculateTotalDelta()\n        setTotalDelta(delta)\n\n    }, [currentYear]);\n\n    return(\n        <div id=\"content-page\" className=\"px-20\">\n            <p className=\"mt-9 text-3xl font-bold mb-5\">Jahreserlöse {currentYearString}</p>\n            <div className=\"mb-2.5\">\n                <span onClick={()=>{setCurrentYear(revenues_2020);setCurrentYearString(\"2020\")}}\n                      className=\"text-sm cursor-pointer underline m-1\">2020</span>|\n                <span onClick={()=>{setCurrentYear(revenues_2021);setCurrentYearString(\"2021\")}}\n                      className=\"text-sm cursor-pointer underline m-1\">2021</span>|\n                <span onClick={()=>{setCurrentYear(revenues_2022);setCurrentYearString(\"2022\")}}\n                      className=\"text-sm cursor-pointer underline m-1\">2022</span>\n            </div>\n\n            <div className=\"sm:rounded-lg shadow-md border\">\n                <table className=\"flex-row w-full table-auto\">\n                    <thead>\n                    <tr className=\"text-xs text-gray-500 border-b text-left\">\n                        <th className=\"font-normal\">Warenart</th>\n                        <th className=\"text-right font-normal\">Werksgewicht</th>\n                        <th className=\"text-right font-normal\">Betrag Werksgewicht</th>\n                        <th className=\"text-right font-normal\">Betrag erhalten</th>\n                        <th className=\"text-right font-normal\">Delta</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"bg-gray-50\">\n                    {currentYear.map((year) =>\n                        <tr key={year.product} className=\"text-xs border-t\">\n                            <td>{year.product}</td>\n                            <td className=\"text-right\">{year.weight}</td>\n                            <td className=\"text-right\">{year.value} €</td>\n                            <td className=\"text-right\">{year.income} €</td>\n                            <td className=\"text-right\">{year.delta} €</td>\n                        </tr>\n                        )}\n                    <tr>\n                        <td colSpan={5}>\n                            <hr/>\n                        </td>\n                    </tr>\n                    <tr className=\"text-xs\">\n                        <td/>\n                        <td className=\"text-right\">\n                            {totalWeight}\n                        </td>\n                        <td className=\"text-right\">\n                            {totalValue} €\n                        </td>\n                        <td className=\"text-right\">\n                            {totalIncome} €\n                        </td>\n                        <td className=\"text-right\">\n                            {totalDelta.toFixed(2)} €\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AnnualRevenues","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting/co2-evaluation.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting/control-documents.tsx",["186","187","188","189"],[],"const machineList = [\n    {\n        machine: 7000,\n        pdf: \"\",\n        weigh: \"10000-10069\",\n        date: \"01/15/2020 11:32 AM\",\n        goods: \"-\",\n        gross: \"\",\n        tare: 1546,\n        net: -1546,\n        service_life: \"287.19h\",\n        prod_time: \"0.00h\",\n        kg_per_hour: -0.31,\n        note: \"\",\n        certificate: \"\"\n    },\n    {\n        machine: 7000,\n        pdf: \"\",\n        weigh: \"10000-10068\",\n        date: \"01/15/2020 11:32 AM\",\n        goods: \"-\",\n        gross: 130,\n        tare: \"\",\n        net: 130,\n        service_life: \"6,089.98h\",\n        prod_time: \"0.00h\",\n        kg_per_hour: 0.03,\n        note: \"\",\n        certificate: \"\"\n    },\n    {\n        machine: 7000,\n        pdf: \"\",\n        weigh: \"10000-10059\",\n        date: \"05/13/2019, 6:23 PM\",\n        goods: \"-\",\n        gross: 1994,\n        tare: 1546,\n        net: 448,\n        service_life: \"49.75h\",\n        prod_time: \"0.00h\",\n        kg_per_hour: 19.82,\n        note: \"Weighing Steel Frames Fa Sachs\",\n        certificate: \"\"\n    },\n    {\n        machine: 8000,\n        pdf: \"\",\n        weigh: \"10000-10033\",\n        date: \"28.04.2017, 17:22\",\n        goods: \"-\",\n        gross: 12000,\n        tare: 1290,\n        net: 9360,\n        service_life: \"7,45h\",\n        prod_time: \"0.00h\",\n        kg_per_hour: 1256.38,\n        note: \"\",\n        certificate: \"\"\n    },\n    {\n        machine: 8000,\n        pdf: \"\",\n        weigh: \"10000-10033\",\n        date: \"28.04.2017, 17:22\",\n        goods: \"-\",\n        gross: 12000,\n        tare: 1290,\n        net: 9360,\n        service_life: \"7,45h\",\n        prod_time: \"0.00h\",\n        kg_per_hour: 1256.38,\n        note: \"\",\n        certificate: \"\"\n    },\n    {\n        machine: 8030,\n        pdf: \"\",\n        weigh: \"10000-10081\",\n        date: \"05.10.2022, 17:38\",\n        goods: \"Eisenspäne\",\n        gross: 2470,\n        tare: 2470,\n        net: \"\",\n        service_life: \"175,18h\",\n        prod_time: \"126,88h\",\n        kg_per_hour: 0.00,\n        note: \"\",\n        certificate: \"\"\n    },\n    {\n        machine: 12345,\n        pdf: \"\",\n        weigh: \"10000-10080\",\n        date: \"18.05.2022, 14:45\",\n        goods: \"Eisenspäne, gebrochen ESB\",\n        gross: 5010,\n        tare: 2340,\n        net: 2670,\n        service_life: \"0,64h\",\n        prod_time: \"0,30h\",\n        kg_per_hour: 8949.72,\n        note: \"\",\n        certificate: \"\"\n    },\n]\n\nconst ControlDocuments = () => {\n    return(\n        <div id=\"content-page\" className=\"px-20\">\n            <p className=\"mt-9 text-3xl font-bold mb-10\">Kontrollbelege</p>\n            <div className=\"sm:rounded-lg shadow-md border overflow-x-auto\">\n                <table className=\"table-auto w-full\">\n                    <thead>\n                    <tr className=\"text-xs text-gray-500 border-b text-left\">\n                        <th className=\"font-normal\">Maschine</th>\n                        <th className=\"font-normal\">PDF</th>\n                        <th className=\"font-normal\">Wiegenr.</th>\n                        <th className=\"font-normal\">Datum</th>\n                        <th className=\"font-normal\">Warenart</th>\n                        <th className=\"font-normal\">Bruttogewitcht</th>\n                        <th className=\"font-normal\">Taragewitcht</th>\n                        <th className=\"font-normal\">Nettogewicht</th>\n                        <th className=\"font-normal\">Standzeit</th>\n                        <th className=\"font-normal\">Prod.-<br/>Zeit</th>\n                        <th className=\"font-normal\">kg / h</th>\n                        <th className=\"font-normal\">Bemerkung</th>\n                        <th className=\"font-normal\">W.<br/>Schein</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"bg-gray-50\">\n                    {machineList.map((machine) =>\n                        <tr key={machine.machine} className=\"text-xs border-t\">\n                            <td>{machine.machine}</td>\n                            <td><img className=\"h-5\" src=\"/download-svgrepo-com.svg\"/></td>\n                            <td>{machine.weigh.slice(0,6)}<br/>{machine.weigh.slice(6,12)}</td>\n                            <td>{machine.date.slice(0,10).replaceAll(\"/\",\".\")}</td>\n                            <td>{machine.goods}</td>\n                            <td>{machine.gross}</td>\n                            <td>{machine.tare}</td>\n                            <td>{machine.net}</td>\n                            <td>{machine.service_life}</td>\n                            <td>{machine.prod_time}</td>\n                            <td>{machine.kg_per_hour}</td>\n                            <td>{machine.note}</td>\n                            <td><img className=\"h-5\" src=\"/upload-svgrepo-com.svg\"/></td>\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default ControlDocuments","/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/reporting.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/storage-systems.tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data/edit-machine/[id].tsx",[],[],"/Users/adrianbrodzinski/Desktop/untitled folder/frontend-skeleton/pages/master-data/new-machine.tsx",[],[],{"ruleId":"190","severity":1,"message":"191","line":34,"column":7,"nodeType":"192","endLine":34,"endColumn":9,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":27,"column":13,"nodeType":"196","endLine":27,"endColumn":66},{"ruleId":"197","severity":1,"message":"198","line":27,"column":13,"nodeType":"196","endLine":27,"endColumn":66},{"ruleId":"194","severity":1,"message":"195","line":6,"column":20,"nodeType":"196","endLine":6,"endColumn":77},{"ruleId":"194","severity":1,"message":"195","line":5,"column":17,"nodeType":"196","endLine":5,"endColumn":95},{"ruleId":"197","severity":1,"message":"198","line":5,"column":17,"nodeType":"196","endLine":5,"endColumn":95},{"ruleId":"194","severity":1,"message":"195","line":52,"column":37,"nodeType":"196","endLine":52,"endColumn":90},{"ruleId":"197","severity":1,"message":"198","line":52,"column":37,"nodeType":"196","endLine":52,"endColumn":90},{"ruleId":"194","severity":1,"message":"195","line":92,"column":29,"nodeType":"196","endLine":96,"endColumn":28},{"ruleId":"197","severity":1,"message":"198","line":92,"column":29,"nodeType":"196","endLine":96,"endColumn":28},{"ruleId":"194","severity":1,"message":"195","line":48,"column":25,"nodeType":"196","endLine":48,"endColumn":62},{"ruleId":"197","severity":1,"message":"198","line":48,"column":25,"nodeType":"196","endLine":48,"endColumn":62},{"ruleId":"194","severity":1,"message":"195","line":57,"column":25,"nodeType":"196","endLine":57,"endColumn":55},{"ruleId":"197","severity":1,"message":"198","line":57,"column":25,"nodeType":"196","endLine":57,"endColumn":55},{"ruleId":"190","severity":1,"message":"199","line":44,"column":30,"nodeType":"200","endLine":44,"endColumn":52},{"ruleId":"190","severity":1,"message":"201","line":40,"column":7,"nodeType":"192","endLine":40,"endColumn":27,"suggestions":"202"},{"ruleId":"190","severity":1,"message":"199","line":52,"column":30,"nodeType":"200","endLine":52,"endColumn":52},{"ruleId":"190","severity":1,"message":"203","line":267,"column":5,"nodeType":"204","endLine":267,"endColumn":14,"suggestions":"205"},{"ruleId":"190","severity":1,"message":"206","line":159,"column":8,"nodeType":"192","endLine":159,"endColumn":21,"suggestions":"207"},{"ruleId":"194","severity":1,"message":"195","line":136,"column":33,"nodeType":"196","endLine":136,"endColumn":87},{"ruleId":"197","severity":1,"message":"198","line":136,"column":33,"nodeType":"196","endLine":136,"endColumn":87},{"ruleId":"194","severity":1,"message":"195","line":147,"column":33,"nodeType":"196","endLine":147,"endColumn":85},{"ruleId":"197","severity":1,"message":"198","line":147,"column":33,"nodeType":"196","endLine":147,"endColumn":85},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.land_id' and 'pid.client_id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLand' needs the current value of 'data.land_id'.","ArrayExpression",["208"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Assignments to the 'SHIFT_CALENDAR' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'pid.id'. Either include it or remove the dependency array.",["209"],"React Hook useEffect contains a call to 'setDataset'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [year, dataset] as a second argument to the useEffect Hook.","Identifier",["210"],"React Hook useEffect has missing dependencies: 'calculateTotalDelta', 'calculateTotalIncome', 'calculateTotalValue', and 'calculateTotalWeight'. Either include them or remove the dependency array.",["211"],{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [data.land_id, pid.client_id]",{"range":"220","text":"221"},"Update the dependencies array to be: [startDate, endDate, pid.id]",{"range":"222","text":"223"},"Add dependencies array: [year, dataset]",{"range":"224","text":"225"},"Update the dependencies array to be: [calculateTotalDelta, calculateTotalIncome, calculateTotalValue, calculateTotalWeight, currentYear]",{"range":"226","text":"227"},[1191,1193],"[data.land_id, pid.client_id]",[1399,1419],"[startDate, endDate, pid.id]",[6447,6447],", [year, dataset]",[3817,3830],"[calculateTotalDelta, calculateTotalIncome, calculateTotalValue, calculateTotalWeight, currentYear]"]